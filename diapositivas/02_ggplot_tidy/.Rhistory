library(gapminder)
gapminder
library(cars)
library(tidyverse)
cars
class(cars)
cars?
sd
sd
sd
?cars
cars$apple
gapminder$aple
gapminder$apple
gapminder
View(gapminder)
library(tidyverse)
n_p <- 100
n_s <- 30
# Set the seed
set.seed(12468)
# Generate data
pop_df <- tibble(
i = 3,
x = rnorm(n_p, mean = 5, sd = 1.5),
e = rnorm(n_p, mean = 0, sd = 1),
y = i + 0.5 * x + e,
row = rep(1:sqrt(n_p), times = sqrt(n_p)),
col = rep(1:sqrt(n_p), each = sqrt(n_p)),
s1 = sample(x = c(rep(T, n_s), rep(F, n_p - n_s))),
s2 = sample(x = c(rep(T, n_s), rep(F, n_p - n_s))),
s3 = sample(x = c(rep(T, n_s), rep(F, n_p - n_s)))
)
View(pop_df)
ggplot(data = pop_df, aes(x = row, y = col)) +
geom_point(color = "darkslategray", size = 10) +
theme_empty
library(ggthemes)
n_p <- 100
n_s <- 30
# Set the seed
set.seed(12468)
# Generate data
pop_df <- tibble(
i = 3,
x = rnorm(n_p, mean = 5, sd = 1.5),
e = rnorm(n_p, mean = 0, sd = 1),
y = i + 0.5 * x + e,
row = rep(1:sqrt(n_p), times = sqrt(n_p)),
col = rep(1:sqrt(n_p), each = sqrt(n_p)),
s1 = sample(x = c(rep(T, n_s), rep(F, n_p - n_s))),
s2 = sample(x = c(rep(T, n_s), rep(F, n_p - n_s))),
s3 = sample(x = c(rep(T, n_s), rep(F, n_p - n_s)))
)
ggplot(data = pop_df, aes(x = row, y = col)) +
geom_point(color = "darkslategray", size = 10) +
theme_empty
theme_empty <- theme_bw() + theme(
theme_empty <- theme_bw() + theme(
line = element_blank(),
rect = element_blank(),
strip.text = element_blank(),
axis.text = element_blank(),
plot.title = element_blank(),
axis.title = element_blank(),
plot.margin = structure(c(0, 0, -1, -1), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
sd
theme_empty <- theme_bw() + theme(
line = element_blank(),
rect = element_blank(),
strip.text = element_blank(),
axis.text = element_blank(),
plot.title = element_blank(),
axis.title = element_blank(),
plot.margin = structure(c(0, 0, -1, -1), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
n_p <- 100
n_s <- 30
# Set the seed
set.seed(12468)
# Generate data
pop_df <- tibble(
i = 3,
x = rnorm(n_p, mean = 5, sd = 1.5),
e = rnorm(n_p, mean = 0, sd = 1),
y = i + 0.5 * x + e,
row = rep(1:sqrt(n_p), times = sqrt(n_p)),
col = rep(1:sqrt(n_p), each = sqrt(n_p)),
s1 = sample(x = c(rep(T, n_s), rep(F, n_p - n_s))),
s2 = sample(x = c(rep(T, n_s), rep(F, n_p - n_s))),
s3 = sample(x = c(rep(T, n_s), rep(F, n_p - n_s)))
)
ggplot(data = pop_df, aes(x = row, y = col)) +
geom_point(color = "darkslategray", size = 10) +
theme_empty
ggplot(data = pop_df, aes(x = row, y = col, shape = s1)) +
geom_point(color = "darkslategray", size = 10) +
scale_shape_manual(values = c(1, 19)) +
theme_empty
ggplot(data = pop_df, aes(x = row, y = col, shape = s2)) +
geom_point(color = "darkslategray", size = 10) +
scale_shape_manual(values = c(1, 19)) +
theme_empty
ggplot(data = pop_df, aes(x = row, y = col, shape = s1)) +
geom_point(color = "darkslategray", size = 10) +
scale_shape_manual(values = c(1, 19)) +
theme_empty
ggplot(data = pop_df, aes(x = row, y = col, shape = s2)) +
geom_point(color = "darkslategray", size = 10) +
scale_shape_manual(values = c(1, 19)) +
theme_empty
View(pop_df)
library(gapminder)
starwars |>
select(name, species) |>
group_by(species) |>
mutate(num = n()) |>
head(10)
library(tidyverse)
starwars |>
select(name, species) |>
group_by(species) |>
mutate(num = n()) |>
head(10)
starwars |>
group_by(species) |>
mutate(num = n()) |>
head(10)
starwars |>
select(species) |>
group_by(species) |>
mutate(num = n()) |>
head(10)
starwars |>
select(species) |>
group_by(species) |>
mutate(num = n())
starwars |>
count(species)
library(tidyverse)
library(gapminder)
mean_median_values <- gapminder |>
group_by(continent) |>
summarize(
mean_lifeExp = mean(lifeExp, na.rm = TRUE),
median_lifeExp = median(lifeExp, na.rm = TRUE)
)
# Create the plot
ggplot(gapminder) +
geom_histogram(aes(x=lifeExp), bins = 20, fill="lightblue", color="darkblue") +
labs(y = "Count", x = "Life Expectancy (years)") +
theme_minimal() +
facet_wrap(~continent, ncol = 1) +
geom_vline(data = mean_median_values, aes(xintercept = mean_lifeExp, color = "Mean"),
linetype = "dashed", size = 1) +
geom_vline(data = mean_median_values, aes(xintercept = median_lifeExp, color = "Median"),
linetype = "dashed", size = 1) +
scale_color_manual(values = c("Mean" = "darkred", "Median" = "darkgreen")) +
guides(color = guide_legend(title = NULL)) +  # Remove the legend title
theme(legend.position = "top")
gap_stats <- gapminder |>
group_by(continent) |>
summarise(
lifeExp_mean = mean(lifeExp),
lifeExp_sd = sd(lifeExp)
)
# Create the plot
ggplot(gapminder) +
geom_histogram(aes(x=lifeExp), bins = 20, fill="lightblue", color="darkblue") +
labs(y = "Count", x = "Life Expectancy (years)") +
theme_minimal() +
facet_wrap(~continent, ncol = 1) +
geom_vline(data = mean_median_values, aes(xintercept = mean_lifeExp, color = "Mean"),
linetype = "dashed", size = 1) +
scale_color_manual(values = c("Mean" = "darkred")) +
guides(color = guide_legend(title = NULL)) +  # Remove the legend title
theme(legend.position = "top")
# Create the plot
ggplot(gapminder) +
geom_histogram(aes(x=lifeExp), bins = 20, fill="lightblue", color="darkblue") +
labs(y = "Count", x = "Life Expectancy (years)") +
theme_minimal() +
facet_wrap(~continent, ncol = 1) +
geom_vline(data = mean_median_values, aes(xintercept = mean_lifeExp, color = "Mean"),
linetype = "dashed", size = 1) +
scale_color_manual(values = c("Mean" = "darkred"))
# Compute mean and standard deviation for each continent
mean_median_values <- gapminder %>%
group_by(continent) %>%
summarise(
mean_lifeExp = mean(lifeExp),
sd_lifeExp = sd(lifeExp)
)
# Create a dataset for the polygons (±1 SD around the mean)
polygon_data <- mean_median_values %>%
mutate(
x_min = mean_lifeExp - sd_lifeExp,
x_max = mean_lifeExp + sd_lifeExp,
y_min = 0,
y_max = 50  # Adjust based on the histogram's scale
)
# Plot histogram with polygon and mean line
ggplot(gapminder) +
geom_histogram(aes(x = lifeExp), bins = 20, fill = "lightblue", color = "darkblue") +
geom_rect(
data = polygon_data,
aes(xmin = x_min, xmax = x_max, ymin = y_min, ymax = y_max, fill = continent),
alpha = 0.2
) +
geom_vline(
data = mean_median_values,
aes(xintercept = mean_lifeExp, color = "Mean"),
linetype = "dashed", size = 1
) +
scale_fill_manual(values = c("Africa" = "red", "Americas" = "blue",
"Asia" = "green", "Europe" = "purple", "Oceania" = "orange")) +
scale_color_manual(values = c("Mean" = "darkred")) +
labs(y = "Count", x = "Life Expectancy (years)") +
theme_minimal() +
facet_wrap(~continent, ncol = 1) +
guides(color = guide_legend(title = NULL)) +  # Remove legend title
theme(legend.position = "top")
# Create a dataset for the polygons (±1 SD around the mean)
polygon_data <- mean_median_values %>%
mutate(
x_min = mean_lifeExp - sd_lifeExp,
x_max = mean_lifeExp + sd_lifeExp,
y_min = 0,
y_max = 100  # Adjust based on the histogram's scale
)
# Plot histogram with polygon and mean line
ggplot(gapminder) +
geom_histogram(aes(x = lifeExp), bins = 20, fill = "lightblue", color = "darkblue") +
geom_rect(
data = polygon_data,
aes(xmin = x_min, xmax = x_max, ymin = y_min, ymax = y_max, fill = continent),
alpha = 0.2
) +
geom_vline(
data = mean_median_values,
aes(xintercept = mean_lifeExp, color = "Mean"),
linetype = "dashed", size = 1
) +
scale_fill_manual(values = c("Africa" = "red", "Americas" = "blue",
"Asia" = "green", "Europe" = "purple", "Oceania" = "orange")) +
scale_color_manual(values = c("Mean" = "darkred")) +
labs(y = "Count", x = "Life Expectancy (years)") +
theme_minimal() +
facet_wrap(~continent, ncol = 1) +
guides(color = guide_legend(title = NULL)) +  # Remove legend title
theme(legend.position = "top")
# Plot histogram with polygon and mean line
ggplot(gapminder) +
geom_histogram(aes(x = lifeExp), bins = 20, fill = "lightblue", color = "darkblue") +
geom_rect(
data = polygon_data,
aes(xmin = x_min, xmax = x_max, ymin = y_min, ymax = y_max, fill = continent),
alpha = 0.2
) +
geom_vline(
data = mean_median_values,
aes(xintercept = mean_lifeExp, color = "Mean"),
linetype = "dashed", size = 1
) +
scale_fill_manual(values = c("Africa" = "red", "Americas" = "red",
"Asia" = "red", "Europe" = "red", "Oceania" = "red")) +
scale_color_manual(values = c("Mean" = "darkred")) +
labs(y = "Count", x = "Life Expectancy (years)") +
theme_minimal() +
facet_wrap(~continent, ncol = 1) +
guides(color = guide_legend(title = NULL)) +  # Remove legend title
theme(legend.position = "top")
# Plot histogram with polygon and mean line
ggplot(gapminder) +
geom_histogram(aes(x = lifeExp), bins = 20, fill = "lightblue", color = "darkblue") +
geom_rect(
data = polygon_data,
aes(xmin = x_min, xmax = x_max, ymin = y_min, ymax = y_max, fill = continent),
alpha = 0.2
) +
geom_vline(
data = mean_median_values,
aes(xintercept = mean_lifeExp, color = "Mean"),
linetype = "dashed", size = 1
) +
scale_fill_manual(values = c("Africa" = "red", "Americas" = "red",
"Asia" = "red", "Europe" = "red", "Oceania" = "red")) +
scale_color_manual(values = c("Mean" = "darkred")) +
labs(y = "Count", x = "Life Expectancy (years)") +
theme_minimal() +
facet_wrap(~continent, ncol = 1) +
guides(fill = "none", color = guide_legend(title = NULL)) +  # Remove legend title
theme(legend.position = "top")
# Plot histogram with polygon and mean line
ggplot(gapminder) +
geom_histogram(aes(x = lifeExp), bins = 20, fill = "lightblue", color = "darkblue") +
geom_rect(
data = polygon_data,
aes(xmin = x_min, xmax = x_max, ymin = y_min, ymax = y_max, fill = continent),
alpha = 0.2
) +
geom_vline(
data = mean_median_values,
aes(xintercept = mean_lifeExp, color = "Mean"),
linetype = "dashed", size = 1
) +
scale_fill_manual(values = c("Africa" = "red", "Americas" = "red",
"Asia" = "red", "Europe" = "red", "Oceania" = "red")) +
scale_color_manual(values = c("Mean" = "darkred")) +
labs(y = "Count", x = "Life Expectancy (years)") +
theme_minimal() +
facet_wrap(~continent, ncol = 1) +
guides(fill = "none", color = guide_legend(title = NULL)) +  # Remove legend title
theme(legend.position = "none")  # Removes all legends
count(species)
# Unir la información de la media y la desviación estándar con el dataset original
gapminder_with_stats <- gapminder %>%
left_join(mean_median_values, by = "continent") %>%
mutate(
within_1SD = lifeExp >= (mean_lifeExp - sd_lifeExp) & lifeExp <= (mean_lifeExp + sd_lifeExp)
)
# Calcular la proporción de observaciones dentro de 1 SD por continente
proportion_within_1SD <- gapminder_with_stats %>%
group_by(continent) %>%
summarise(proportion_within_1SD = mean(within_1SD))
proportion_within_1SD
View(gapminder_with_stats)
ggplot(gapminder)+geom_point(aes(x=pop, y=gdpPercap))
ggplot(gapminder)+geom_point(aes(x=pop, y=lifeExp))
ggplot(gapminder)+geom_point(aes(x=gdpPercap, y=lifeExp))
ggplot(gapminder)+geom_point(aes(x=log(gdpPercap), y=lifeExp))
ggplot(gapminder)+geom_point(aes(x=gdpPercap, y=lifeExp))
ggplot(gapminder)+geom_point(aes(x=log(gdpPercap), y=pop))
ggplot(gapminder)+geom_point(aes(x=log(gdpPercap), y=pop/1000000))
ggplot(gapminder)+
geom_point(aes(x=gdpPercap, y=lifeExp)) +
labs(x = "log(GDP per cápita)",
y = "Life Expectancy") +
theme_minimal()
ggplot(gapminder)+
geom_point(aes(x=log(gdpPercap), y=lifeExp)) +
labs(x = "log(GDP per cápita)",
y = "Life Expectancy") +
theme_minimal()
cor(gapminder$gdpPercap,gapminder$lifeExp)
cor(log(gapminder$gdpPercap),gapminder$lifeExp)
cor((gapminder$gdpPercap/1000000),gapminder$lifeExp)
ggplot(gapminder)+
geom_point(aes(x=log(gdpPercap), y=lifeExp, color = continent)) +
labs(x = "log(GDP per cápita)",
y = "Life Expectancy") +
theme_minimal()
ggplot(gapminder)+
geom_point(aes(x=log(gdpPercap), y=lifeExp, color = continent)) +
labs(x = "log(GDP per cápita)",
y = "Life Expectancy") +
theme_minimal() +  scale_color_brewer(name = "Continent", palette = "Set1") ## Different colour scale
ggplot(gapminder)+
geom_point(aes(x=log(gdpPercap), y=lifeExp, color = continent)) +
labs(x = "log(GDP per cápita)",
y = "Life Expectancy") +
theme_minimal() +  scale_color_brewer(name = "Continent", palette = "Set2") ## Different colour scale
ggplot(gapminder)+
geom_point(aes(x=log(gdpPercap), y=lifeExp, color = continent)) +
labs(x = "log(GDP per cápita)",
y = "Life Expectancy") +
theme_minimal() +  scale_color_brewer(name = "Continent", palette = "Set3") ## Different colour scale
ggplot(gapminder)+
geom_point(aes(x=log(gdpPercap), y=lifeExp, color = continent)) +
labs(x = "log(GDP per cápita)",
y = "Life Expectancy") +
theme_minimal() +  scale_color_brewer(name = "Continent", palette = "Set4") ## Different colour scale
ggplot(gapminder)+
geom_point(aes(x=log(gdpPercap), y=lifeExp, color = continent)) +
labs(x = "log(GDP per cápita)",
y = "Life Expectancy") +
theme_minimal() +  scale_color_brewer(name = "Continent", palette = "Set5") ## Different colour scale
ggplot(gapminder)+
geom_point(aes(x=log(gdpPercap), y=lifeExp, color = continent)) +
labs(x = "log(GDP per cápita)",
y = "Life Expectancy") +
theme_minimal() +  scale_color_brewer(name = "Continent", palette = "Set7") ## Different colour scale
ggplot(gapminder)+
geom_point(aes(x=log(gdpPercap), y=lifeExp, color = continent)) +
labs(x = "log(GDP per cápita)",
y = "Life Expectancy") +
theme_minimal() +  scale_color_brewer(name = "Continent", palette = "Spectral") ## Different colour scale
ggplot(gapminder)+
geom_point(aes(x=log(gdpPercap), y=lifeExp, color = continent)) +
labs(x = "log(GDP per cápita)",
y = "Life Expectancy") +
theme_minimal() +  scale_color_brewer(name = "Continent", palette = "Dark2") ## Different colour scale
gapminder |>
group_by(continent) |>
summarise(
correlation = cor(lifeExp, gdpPercap),
)
library(tidyverse)
library(gapminder)
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp, alpha = continent)) +
geom_point()
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp, shape = continent)) +
geom_point()
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp, size = continent)) +
geom_point()
