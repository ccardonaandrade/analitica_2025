ggplot() +
geom_histogram(aes(x = lifeExp, y = after_stat(density),
fill = "lightblue"),
color = "#c8d9ed", bins=30) +
scale_x_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 10)) +
scale_y_continuous(limits = c(0, 0.04)) +
theme_minimal()
gapminder |>
ggplot() +
geom_histogram(aes(x = lifeExp, y = after_stat(density)),
fill = "lightblue"),
gapminder |>
ggplot() +
geom_histogram(aes(x = lifeExp),
fill = "lightblue"),
gapminder |>
ggplot() +
geom_histogram(aes(x = lifeExp, y = after_stat(density)),
fill = "lightblue",
color = "#c8d9ed", bins=30) +
scale_x_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 10)) +
scale_y_continuous(limits = c(0, 0.04)) +
theme_minimal()
gapminder |>
ggplot() +
geom_histogram(aes(x = lifeExp, y = after_stat(density)),
fill = "lightblue",
color = "#c8d9ed", bins=30) +
geom_density(aes(x=lifeExp))+
scale_x_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 10)) +
scale_y_continuous(limits = c(0, 0.04)) +
theme_minimal()
gapminder |>
ggplot() +
geom_histogram(aes(x = lifeExp, y = after_stat(density)),
fill = "lightblue",
color = "#c8d9ed", bins=30) +
geom_density(aes(x=lifeExp), color="darkblue")+
scale_x_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 10)) +
scale_y_continuous(limits = c(0, 0.04)) +
theme_minimal()
gapminder |>
ggplot() +
geom_histogram(aes(x = lifeExp, y = after_stat(density)),
fill = "lightblue",
color = "#c8d9ed", bins=30) +
geom_density(aes(x=lifeExp, fill = after_stat(x) >= 60 & after_stat(x) <= 70), color="darkblue")+
scale_x_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 10)) +
scale_y_continuous(limits = c(0, 0.04)) +
scale_fill_manual(values = c("FALSE" = "white", "TRUE" = "darkblue")) +
theme_minimal()
gapminder |>
ggplot() +
geom_histogram(aes(x = lifeExp, y = after_stat(density)),
fill = "lightblue",
color = "#c8d9ed", bins = 30) +
geom_density(aes(x = lifeExp,
fill = (lifeExp >= 60 & lifeExp <= 70)),
color = "darkblue", alpha = 0.5) +
scale_x_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 10)) +
scale_y_continuous(limits = c(0, 0.04)) +
scale_fill_manual(values = c("FALSE" = "white", "TRUE" = "darkblue")) +
theme_minimal() +
theme(legend.position = "none")
gapminder |>
ggplot() +
geom_histogram(aes(x = lifeExp, y = after_stat(density)),
fill = "lightblue",
color = "#c8d9ed", bins = 30) +
geom_density(aes(x = lifeExp,
fill = (lifeExp >= 60 & lifeExp <= 70)),
color = "darkblue") +
scale_x_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 10)) +
scale_y_continuous(limits = c(0, 0.04)) +
scale_fill_manual(values = c("FALSE" = "white", "TRUE" = "darkblue")) +
theme_minimal() +
theme(legend.position = "none")
gapminder |>
ggplot() +
geom_histogram(aes(x = lifeExp, y = after_stat(density),
fill = after_stat(x) >= 60 & after_stat(x) <= 70),
color = "black", bins=30) +
scale_x_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 10)) +
scale_y_continuous(limits = c(0, 0.04)) +
scale_fill_manual(values = c("FALSE" = "white", "TRUE" = "darkblue")) +
theme_minimal() +
theme(legend.position = "none")  # Hides the legend
gapminder |>
ggplot() +
geom_histogram(aes(x = lifeExp, y = after_stat(density)),
fill = "lightblue",
color = "#c8d9ed", bins=30) +
geom_density(aes(x=lifeExp), color="darkblue")+
scale_x_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 10)) +
scale_y_continuous(limits = c(0, 0.04)) +
theme_minimal()
gapminder |>
ggplot() +
geom_histogram(aes(x = lifeExp, y = after_stat(density)),
fill = "lightblue",
color = "#c8d9ed", bins = 30) +
geom_density(aes(x = lifeExp,
fill = (lifeExp >= 60 & lifeExp <= 70)),
color = "darkblue") +
scale_x_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 10)) +
scale_y_continuous(limits = c(0, 0.04)) +
scale_fill_manual(values = c("FALSE" = "white", "TRUE" = "darkblue")) +
theme_minimal() +
theme(legend.position = "none")
gapminder |>
ggplot() +
geom_histogram(aes(x = lifeExp, y = after_stat(density)),
fill = "lightblue",
color = "#c8d9ed", bins = 30) +
# Density plot for values between 60 and 70, filled with darkblue
geom_density(aes(x = lifeExp,
fill = (lifeExp >= 60 & lifeExp <= 70)),
color = "darkblue", alpha = 0.5) +
# Density plot for the rest (not filled)
geom_density(aes(x = lifeExp),
color = "darkblue", fill = "white", alpha = 0) +
scale_x_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 10)) +
scale_y_continuous(limits = c(0, 0.04)) +
scale_fill_manual(values = c("FALSE" = "white", "TRUE" = "darkblue")) +
theme_minimal() +
theme(legend.position = "none")
gapminder |>
ggplot() +
geom_histogram(aes(x = lifeExp, y = after_stat(density)),
fill = "lightblue",
color = "#c8d9ed", bins = 30) +
# Plot the density curve with no fill for the entire curve
geom_density(aes(x = lifeExp), color = "darkblue", fill = "transparent") +
# Add shaded area between 60 and 70 for the density curve
geom_area(data = gapminder |> filter(lifeExp >= 60 & lifeExp <= 70),
aes(x = lifeExp, y = after_stat(density)),
fill = "darkblue", alpha = 0.5) +
scale_x_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 10)) +
scale_y_continuous(limits = c(0, 0.04)) +
theme_minimal() +
theme(legend.position = "none")
# Generate the density data
density_data <- gapminder %>%
ggplot(aes(x = lifeExp)) +
geom_density(aes(fill = after_stat(x >= 60 & x <= 70)), color = "darkblue", adjust = 1) +
scale_fill_manual(values = c("TRUE" = "darkblue", "FALSE" = "transparent")) +  # Color only between 60 and 70
scale_x_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 10)) +
scale_y_continuous(limits = c(0, 0.04)) +
theme_minimal() +
theme(legend.position = "none")  # Remove legend for fill aesthetic
# Add a shaded ribbon between 60 and 70
the.plot <- ggplot(data = gapminder, aes(x = lifeExp)) +
geom_density(aes(fill = after_stat(x >= 60 & x <= 70)), color = "darkblue", adjust = 1) +
geom_ribbon(aes(ymin = 0, ymax = after_stat(density), fill = after_stat(x >= 60 & x <= 70)),
alpha = 0.5) +  # Shade the area between 60 and 70
scale_fill_manual(values = c("TRUE" = "darkblue", "FALSE" = "transparent")) +  # Color only between 60 and 70
scale_x_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 10)) +
scale_y_continuous(limits = c(0, 0.04)) +
theme_minimal() +
theme(legend.position = "none")  # Hide legend
print(the.plot)
gapminder |>
ggplot() +
geom_histogram(aes(x = lifeExp, y = after_stat(density)),
fill = "lightblue",
color = "#c8d9ed", bins=30) +
geom_density(aes(x=lifeExp), color="darkblue")+
scale_x_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 10)) +
scale_y_continuous(limits = c(0, 0.04)) +
theme_minimal()
gapminder |>
ggplot() +
geom_histogram(aes(x = lifeExp, y = after_stat(density)),
fill = "lightblue",
color = "#c8d9ed", bins=30) +
geom_density(aes(x=lifeExp), color="darkblue") +
# Add shaded area
stat_function(
fun = dnorm,
args = list(
mean = mean(gapminder$lifeExp),
sd = sd(gapminder$lifeExp)
),
xlim = c(60, 70),
geom = "area",
fill = "darkblue",
alpha = 0.3
) +
scale_x_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 10)) +
scale_y_continuous(limits = c(0, 0.04)) +
theme_minimal()
gapminder |>
ggplot() +
geom_histogram(aes(x = lifeExp, y = after_stat(density)),
fill = "lightblue",
color = "#c8d9ed", bins=30) +
# Add shaded area under the density curve
geom_density(data = subset(gapminder, lifeExp >= 60 & lifeExp <= 70),
aes(x = lifeExp), fill = "darkblue", alpha = 0.3) +
# Add the full density curve on top
geom_density(aes(x = lifeExp), color = "darkblue") +
scale_x_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 10)) +
scale_y_continuous(limits = c(0, 0.04)) +
theme_minimal()
gapminder |>
ggplot() +
geom_histogram(aes(x = lifeExp, y = after_stat(density)),
fill = "lightblue",
color = "#c8d9ed", bins=30) +
geom_density(aes(x=lifeExp), color="darkblue") +
# Add shaded area
stat_function(
fun = dnorm,
args = list(
mean = mean(gapminder$lifeExp),
sd = sd(gapminder$lifeExp)
),
xlim = c(60, 70),
geom = "area",
fill = "darkblue",
alpha = 0.3
) +
scale_x_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 10)) +
scale_y_continuous(limits = c(0, 0.04)) +
theme_minimal()
gapminder |>
ggplot() +
geom_histogram(aes(x = lifeExp, y = after_stat(density)),
fill = "lightblue",
color = "#c8d9ed", bins=30) +
# Add shaded area
stat_density(aes(x = lifeExp),
geom = "area",
fill = "darkblue",
alpha = 0.3,
xlim = c(60, 70)) +
# Add the full density curve on top
geom_density(aes(x = lifeExp), color = "darkblue") +
scale_x_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 10)) +
scale_y_continuous(limits = c(0, 0.04)) +
theme_minimal()
gapminder |>
ggplot() +
geom_histogram(aes(x = lifeExp, y = after_stat(density)),
fill = "lightblue",
color = "#c8d9ed", bins=30) +
# Create the density data first
stat_density(aes(x = lifeExp, y = after_stat(density)),
geom = "line",
color = "darkblue") +
# Add shaded area between 60-70
stat_density(aes(x = lifeExp, y = after_stat(density)),
geom = "area",
fill = "darkblue",
alpha = 0.3,
data = subset(gapminder, lifeExp >= 60 & lifeExp <= 70)) +
scale_x_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 10)) +
scale_y_continuous(limits = c(0, 0.04)) +
theme_minimal()
gapminder |>
ggplot() +
geom_histogram(aes(x = lifeExp, y = after_stat(density)),
fill = "lightblue",
color = "#c8d9ed", bins=30) +
geom_density(aes(x=lifeExp), color="darkblue") +
# Add shaded area
stat_function(
fun = dnorm,
args = list(
mean = mean(gapminder$lifeExp),
sd = sd(gapminder$lifeExp)
),
xlim = c(60, 70),
geom = "area",
fill = "darkblue",
alpha = 0.3
) +
scale_x_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 10)) +
scale_y_continuous(limits = c(0, 0.04)) +
theme_minimal()
ggplot(data = gapminder) +
geom_histogram(aes(x = lifeExp, y = after_stat(density)),
fill = "lightblue",
color = "#c8d9ed", bins = 30) +
geom_density(aes(x = lifeExp), color = "darkblue") +
# Add shaded area under the density curve between 60 and 70
geom_area(data = subset(gapminder, lifeExp >= 60 & lifeExp <= 70),
aes(x = lifeExp, y = ..density..),
fill = "darkblue", alpha = 0.3) +
scale_x_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 10)) +
scale_y_continuous(limits = c(0, 0.04)) +
theme_minimal()
ggplot(data = gapminder) +
geom_histogram(aes(x = lifeExp, y = after_stat(density)),
fill = "lightblue",
color = "#c8d9ed", bins = 30) +
geom_density(aes(x = lifeExp), color = "darkblue") +
# Add shaded area under the density curve between 60 and 70
geom_area(data = subset(gapminder, lifeExp >= 60 & lifeExp <= 70),
aes(x = lifeExp, y = ..density..),
fill = "darkblue", alpha = 0.3) +
scale_x_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 10)) +
scale_y_continuous(limits = c(0, 0.04)) +
theme_minimal()
gapminder |>
ggplot() +
geom_histogram(aes(x = lifeExp, y = after_stat(density)),
fill = "lightblue",
color = "#c8d9ed", bins=30) +
geom_density(aes(x=lifeExp), color="darkblue") +
# Add shaded area
stat_function(
fun = dnorm,
args = list(
mean = mean(gapminder$lifeExp),
sd = sd(gapminder$lifeExp)
),
xlim = c(60, 70),
geom = "area",
fill = "darkblue",
alpha = 0.3
) +
scale_x_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 10)) +
scale_y_continuous(limits = c(0, 0.04)) +
theme_minimal()
density_data <- density(gapminder$lifeExp)
density_df <- data.frame(x = density_data$x, y = density_data$y)
gapminder |>
ggplot() +
geom_histogram(aes(x = lifeExp, y = after_stat(density)),
fill = "lightblue",
color = "#c8d9ed", bins=30) +
geom_density(aes(x = lifeExp), color = "darkblue") +
geom_area(data = subset(density_df, x >= 60 & x <= 70),
aes(x = x, y = y),
fill = "darkblue",
alpha = 0.3) +
scale_x_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 10)) +
scale_y_continuous(limits = c(0, 0.04)) +
theme_minimal()
gapminder |>
ggplot() +
geom_histogram(aes(x = lifeExp, y = after_stat(density)),
fill = "lightblue",
color = "#c8d9ed", bins=30) +
geom_density(aes(x = lifeExp), color = "darkblue") +
geom_area(data = subset(density_df, x >= 60 & x <= 70),
aes(x = x, y = y),
fill = "blue",
alpha = 0.3) +
scale_x_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 10)) +
scale_y_continuous(limits = c(0, 0.04)) +
theme_minimal()
gapminder |>
ggplot() +
geom_histogram(aes(x = lifeExp, y = after_stat(density)),
fill = "lightblue",
color = "#c8d9ed", bins=30) +
geom_density(aes(x = lifeExp), color = "darkblue") +
geom_area(data = subset(density_df, x >= 60 & x <= 70),
aes(x = x, y = y),
fill = "black",
alpha = 0.3) +
scale_x_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 10)) +
scale_y_continuous(limits = c(0, 0.04)) +
theme_minimal()
gapminder |>
ggplot() +
geom_histogram(aes(x = lifeExp, y = after_stat(density)),
fill = "lightblue",
color = "#c8d9ed", bins=30) +
geom_density(aes(x = lifeExp), color = "darkblue") +
geom_area(data = subset(density_df, x >= 60 & x <= 70),
aes(x = x, y = y),
fill = "darkblue",
alpha = 0.3) +
scale_x_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 10)) +
scale_y_continuous(limits = c(0, 0.04)) +
theme_minimal()
gapminder |>
ggplot() +
geom_histogram(aes(x = lifeExp, y = after_stat(density)),
fill = "lightblue",
color = "#c8d9ed", bins=30) +
geom_density(aes(x=lifeExp), color="darkblue") +
# Add shaded area
stat_function(
fun = dnorm,
args = list(
mean = mean(gapminder$lifeExp),
sd = sd(gapminder$lifeExp)
),
xlim = c(60, 70),
geom = "area",
fill = "darkblue",
alpha = 0.3
) +
scale_x_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 10)) +
scale_y_continuous(limits = c(0, 0.04)) +
theme_minimal()
library(openintro)
- Y la otra es cambiando las opciones de la función:
69-70
-1/3.3
pnorm(-0.3030303)
pnorm(-0.30)
pnorm(-0.303)
pnorm(-0.3)
pnorm(-0.3030)
74-70
4/3.3
pnorm(1.2121)
1-pnorm(1.2121)
1-pnorm(1.212121)
1-pnorm(1.21)
pnorm(-0.3030)
pnorm(-0.303)
pnorm(-0.30303)
-0.674*3.3
-2.2242+70
library(tidyverse)
library(janitor)
credit <- read_csv("C:/Users/ccard/OneDrive/Documentos/GitHub/analitica_2025/data/credit_default/credit_demographics.csv")
glimpse(credit)
credit <- credit %>%
clean_names()
glimpse(credit)
fivenum(credit$limit_bal, na.rm = TRUE)
fivenum(credit$limit_bal, na.rm = TRUE)[1]
fivenum(credit$limit_bal, na.rm = TRUE)[2]
fivenum(credit$limit_bal, na.rm = TRUE)[4]
fivenum(credit$limit_bal, na.rm = TRUE)[4]-fivenum(credit$limit_bal, na.rm = TRUE)[2]
credit <- credit |>
mutate(
# Obtener los cinco números resumen
five_num = fivenum(LIMIT_BAL, na.rm = TRUE),
q1 = five_num[2],   # Q1
q3 = five_num[4],   # Q3
# Calcular IQR y límites para outliers según IQR
iqr = q3 - q1,
lower_limit = q1 - 1.5 * iqr,
upper_limit = q3 + 1.5 * iqr,
outlier_iqr = ifelse(LIMIT_BAL < lower_limit | LIMIT_BAL > upper_limit, 1, 0),
)
credit <- credit |>
mutate(
# Obtener los cinco números resumen
five_num = fivenum(limit_bal, na.rm = TRUE),
q1 = five_num[2],   # Q1
q3 = five_num[4],   # Q3
# Calcular IQR y límites para outliers según IQR
iqr = q3 - q1,
lower_limit = q1 - 1.5 * iqr,
upper_limit = q3 + 1.5 * iqr,
outlier_iqr = ifelse(limit_bal < lower_limit | limit_bal > upper_limit, 1, 0),
)
credit <- credit |>
mutate(
# Obtener los cinco números resumen
five_num = fivenum(limit_bal, na.rm = TRUE),
)
ric <- fivenum(credit$limit_bal, na.rm = TRUE)[4]-fivenum(credit$limit_bal, na.rm = TRUE)[2]
credit <- credit |>
mutate(
# Identificar outliers por IQR
outlier_iqr = ifelse(LIMIT_BAL < (q1 - 1.5 * iqr) | LIMIT_BAL > (q3 + 1.5 * iqr), 1, 0),
)
credit <- credit |>
mutate(
# Identificar outliers por IQR
outlier_iqr = ifelse(limit_bal < (q1 - 1.5 * iqr) | limit_bal > (q3 + 1.5 * iqr), 1, 0),
)
q1 <- fivenum(credit$limit_bal, na.rm = TRUE)[2]
q3 <- fivenum(credit$limit_bal, na.rm = TRUE)[4]
ric <- q3-q1
credit <- credit |>
mutate(
# Identificar outliers por IQR
outlier_iqr = ifelse(limit_bal < (q1 - 1.5 * iqr) | limit_bal > (q3 + 1.5 * iqr), 1, 0),
)
credit <- credit |>
mutate(
# Identificar outliers por IQR
outlier_iqr = ifelse(limit_bal < (q1 - 1.5 * ric) | limit_bal > (q3 + 1.5 * ric), 1, 0),
)
View(credit)
credit |> distinct(outlier_iqr)
ggplot(credit) + geom_boxplot(aes(x=limit_bal))
ggplot(credit) + geom_box(aes(x=factor(outlier_iqr)))
ggplot(credit) + geom_bar(aes(x=factor(outlier_iqr)))
credit |> count(outlier_zscore)
credit |> group_by(outlier_zscore) |> count()
credit |> count(outlier_iqr)
mean_limit <- mean(credit$LIMIT_BAL, na.rm = TRUE)
sd_limit <- sd(credit$LIMIT_BAL, na.rm = TRUE)
mean_limit <- mean(credit$limit_bal, na.rm = TRUE)
sd_limit <- sd(credit$limit_bal, na.rm = TRUE)
credit <- credit |>
mutate(
# Calcular z-score y detectar outliers
z_score = (limit_bal - mean_limit) / sd_limit,
outlier_zscore = ifelse(abs(z_score) > 3, 1, 0)
) |>
select(-z_score)
credit |>
count(outlier_zscore)
credit |>
count(outlier_zscore, outlier_iqr)
pnorm(240,
mean = 150,
sd = 50,
lower.tail=FALSE)
