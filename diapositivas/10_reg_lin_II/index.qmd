---
title: Analítica de los Negocios
author: Carlos Cardona Andrade
subtitle: Más en Regresión Lineal 
execute:
  freeze: auto
  echo: true
  fig-width: 6
  fig-height: 5
format:
  revealjs: 
   theme: ../slides.scss
   header-includes: |
      <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css" rel="stylesheet"/>
   slide-number: true
   show-slide-number: all
   transition: fade
   progress: true
   multiplex: false
   scrollable: false
   preview-links: false
   hide-inactive-cursor: true
   highlight-style: printing
   pause: true
---



```{r}
#| eval: true
#| echo: false
library(pacman)
p_load(broom, latex2exp, ggplot2, ggthemes, viridis, dplyr, magrittr, knitr, parallel,gtools)

# Define pink color
red_pink <- "#e64173"

theme_empty <- theme_bw() + theme(
  line = element_blank(),
  rect = element_blank(),
  strip.text = element_blank(),
  axis.text = element_blank(),
  plot.title = element_blank(),
  axis.title = element_blank(),
  plot.margin = structure(c(0, 0, 0, 0), unit = "lines", valid.unit = 3L, class = "unit"),
  legend.position = "none"
)


# Set population and sample sizes
n_p <- 100
n_s <- 30
# Set the seed
set.seed(12468)
# Generate data
pop_df <- tibble(
  i = 3,
  x = rnorm(n_p, mean = 5, sd = 1.5),
  e = rnorm(n_p, mean = 0, sd = 1),
  y = i + 0.5 * x + e,
  row = rep(1:sqrt(n_p), times = sqrt(n_p)),
  col = rep(1:sqrt(n_p), each = sqrt(n_p)),
  s1 = sample(x = c(rep(T, n_s), rep(F, n_p - n_s))),
  s2 = sample(x = c(rep(T, n_s), rep(F, n_p - n_s))),
  s3 = sample(x = c(rep(T, n_s), rep(F, n_p - n_s)))
)
# Regressions
lm0 <- lm(y ~ x, data = pop_df)
lm1 <- lm(y ~ x, data = filter(pop_df, s1 == T))
lm2 <- lm(y ~ x, data = filter(pop_df, s2 == T))
lm3 <- lm(y ~ x, data = filter(pop_df, s3 == T))


# Simulation

```



## Plan para hoy

1. [Condiciones del modelo](#condic)

2. [Consideraciones para una Regresión](#regresion)

3. [Transformación Logarítmica](#log)


# Condiciones del modelo {#condic}

## Condiciones del modelo {.medium}

::: incremental

1. `Linealidad:` hay una relación lineal entre la variable dependiente y la variable explicativa

2. `Varianza Constante:` la variabilidad de los errores es igual para todos los valores de la variable explicativa

3. `Normalidad:` los errores siguen una distribución normal

4. `Independencia:` los errores son independientes entre ellos

:::


## ¿Por qué es importante graficar los datos? {.medium}


```{r}
#| echo: false
#| eval: true
#| fig-align: center


n_p <- 1000  # Define the number of observations

sim_norm <- tibble(
  i = 3,
  x = rnorm(n_p, mean = 5, sd = 1.5),
  e = rnorm(n_p, mean = 0, sd = 1),
  y = i + 0.5 * x + e,
)


ols_model <- lm(y ~ x, data=sim_norm)
tidy(ols_model, conf.int = TRUE)
```

## ¿Son lineales los residuos? {.medium}

```{r}
#| echo: false
#| eval: true
#| fig-align: center



augment(ols_model) |>
  ggplot(aes(x = .fitted, y = .resid)) +
  geom_point() +
  geom_hline(yintercept=0, color="darkred", size=1.2)+
  labs(x = "Valores predichos", y = "Residuos") +
  theme_minimal()
```

✅Los residuos no siguen un patrón o estructura clara. Parecen aleatoriamente distribuidos


## ❌  Claro patrón en los residuos {.medium}


```{r}
#| echo: false
#| eval: true
#| fig-align: center

set.seed(123)

n_p <- 1000  # Define the number of observations

sim_quad <- tibble(
  i = 3,
  x = rnorm(n_p, mean = 5, sd = 1.5),
  e = rnorm(n_p, mean = 0, sd = 1) + 0.5 * (x - mean(x))^2,  # Quadratic term in error
  y = i + 0.5 * x + e
)

ols_model2 <- lm(y ~ x, data=sim_quad)


augment(ols_model2) |>
  ggplot(aes(x = .fitted, y = .resid)) +
  geom_point() +
  geom_hline(yintercept=0, color="darkred", size=1.2)+
  labs(x = "Valores predichos", y = "Residuos") +
  theme_minimal()
```



## ¿Son lineales los residuos? {.medium}

```{r}
#| echo: false
#| eval: true
#| fig-align: center



augment(ols_model) |>
  ggplot(aes(x = .fitted, y = .resid)) +
  geom_point() +
  geom_hline(yintercept=0, color="darkred", size=1.2)+
  geom_hline(yintercept=-2, color="orange", size=1.2, linetype ="dashed")+
  geom_hline(yintercept=2, color="orange", size=1.2, linetype ="dashed")+
  labs(x = "Valores predichos", y = "Residuos") +
  theme_minimal()
```

✅La dispersión vertical de los residuos es relativamente constante en la gráfica


## ❌ La varianza no es constante  {.medium}


```{r}
#| echo: false
#| eval: true
#| fig-align: center



n_p <- 1000  # Define the number of observations

sim_norm <- tibble(
  x = rnorm(n_p, mean = 4, sd = 1.5),  # Centered around 4
  e = rnorm(n_p, mean = 0, sd = x),  # Error increases with x
  y = 2 + 0.5 * x + e
)


ols_model <- lm(y ~ x, data=sim_norm)


augment(ols_model) |>
  ggplot(aes(x = .fitted, y = .resid)) +
  geom_point() +
  geom_hline(yintercept=0, color="darkred", size=1.2)+
  geom_hline(yintercept=-5, color="orange", size=1.2, linetype ="dashed")+
  geom_hline(yintercept=5, color="orange", size=1.2, linetype ="dashed")+
  labs(x = "Valores predichos", y = "Residuos") +
  theme_minimal()
```


## Son normales


```{r}
#| echo: false
#| eval: true
#| fig-align: center

augment(ols_model) |>
  ggplot(aes(x = .resid)) +
  geom_histogram(fill="lightblue", color="darkblue") +
  labs(title = "Distribución de los residuos",
       x = "Residuos",
       y = "Frequency") +
  theme_minimal()
```

✅La distribución de los errores se parece a una distribución normal



## Son normales

```{r}
#| echo: false
#| eval: true
#| fig-align: center

n <- 1000
x <- rnorm(n, mean = 5, sd = 2)
y <- 3 + 2 * x + rchisq(n, df = 3)  # Skewed residuals from chi-square

ols_model_h <- lm(y ~ x)

augment(ols_model_h) |> 
  ggplot(aes(x = .resid)) +
  geom_histogram(fill = "lightblue", color = "darkblue", bins = 30) +
  labs(title = "Distribución de los residuos (Sesgados)",
       x = "Residuos",
       y = "Frecuencia") +
  theme_minimal()
```


## Independencia {.medium}

::: incremental


- Podemos verificar el supuesto de independencia a menudo basándonos en el contexto de los datos y en cómo se recolectaron las observaciones.

- Si los datos se recolectaron en un orden particular, examina un diagrama de dispersión de los residuos versus el orden en que se recolectaron los datos.

:::

:::{.fragment}

✅ Basado en la información disponible, el error de una película no nos dice nada sobre el error de otra película.

:::


## En la práctica.. {.medium}

Al verificar las condiciones del modelo, preguntense si alguna desviación de estas condiciones es tan grande que:

1. Se deba proponer un modelo diferente.

2. Las conclusiones extraídas del modelo deban usarse con precaución.


:::{.fragment}
Si no es así, las condiciones se cumplen suficientemente y podemos proceder con el modelo actual.
:::



# Consideraciones adicionales para una Regresión {#regresion}

## Relaciones no lineales {.medium}

```{r}
#| echo: false
#| eval: true
#| fig-align: center
#| fig-width: 10
set.seed(123)

# Create a tibble with 50 observations
galletas <- tibble(
  galletas = 1:20,
  felicidad = 2 + 0.3 * galletas - 0.02 * galletas^2 + rnorm(20, mean = 0, sd = 0.5)  # Non-linear (inverted U-shape)
)


base_cookies <- ggplot(galletas, aes(x=galletas, y=felicidad)) + 
  geom_point(size = 3) +
  coord_cartesian(xlim = c(0, 20), ylim = c(-1, 5)) +
  scale_x_continuous(breaks = 0:20) +
  labs(x = "Galletas consumidas", y = "Nivel de Felicidad") +
  theme_minimal(base_size = 14) +
  theme(panel.grid.minor = element_blank(),
        plot.title = element_text(face = "bold"))

base_cookies
```


## Relaciones no lineales {.medium}

```{r}
#| echo: false
#| eval: true
#| fig-align: center
#| fig-width: 10

base_cookies +
  geom_smooth(method = "lm", color = "#0074D9", se = FALSE)
```



## Relaciones no lineales {.medium}

```{r}
#| echo: false
#| eval: true
#| fig-align: center
#| fig-width: 10

base_cookies +
  geom_smooth(method = "loess", color = "#0074D9", se = FALSE)
```


## Relaciones no lineales {.medium}

Para agregar el término cuadrático a la regresión, se incluye el término `I(x^2)` en el código: 

```{r}
#| echo: true
#| eval: true
#| fig-align: center
modelo_felicidad <- lm(felicidad ~ galletas + I(galletas^2), data = galletas)
tidy(modelo_felicidad, conf.int = TRUE)
```

. . .

Nuestro modelo estimado entonces es:

$$\widehat{Felicidad}=2+0.33\times Galletas-0.02 \times Galletas^2$$


## ¿Existe la relación cuadrática que vemos en la gráfica? {.medium}

$$\widehat{Felicidad}=\hat{\beta_0}+\hat{\beta_1}\times Galletas +\hat{\beta_2}\times Galletas^2 $$


:::{.fragment}

Evaluamos con una prueba de hipótesis:

$$H_0:\hat{\beta_2}=0$$
$$H_1: \hat{\beta_2} \neq 0$$
:::

## ¿Qué hacer con una observación atípica (outlier)? {.medium}

```{r}
#| echo: false
#| eval: true
#| fig-align: center
#| fig-width: 10
galletas <- tibble(
  felicidad = c(0.5, 2, 1, 2.5, 3, 1.5, 2, 2.5, 8, 3),
  galletas = 1:10
)

base_cookies <- ggplot(galletas, aes(x=galletas, y=felicidad)) + 
  geom_point(size = 3) +
  coord_cartesian(xlim = c(0, 10), ylim = c(0, 8)) +
  scale_x_continuous(breaks = 0:10) +
  labs(x = "Galletas consumidas", y = "Nivel de Felicidad") +
  theme_minimal(base_size = 14) +
  theme(panel.grid.minor = element_blank(),
        plot.title = element_text(face = "bold"))

base_cookies

```


## ¿Qué hacer con una observación atípica (outlier)? {.medium}

```{r}
#| echo: false
#| eval: true
#| fig-align: center
#| fig-width: 10

# Remove the outlier where felicidad == 8
galletas_no_outlier <- galletas %>% filter(felicidad != 8)

# Combine data with an indicator for whether it's with or without the outlier
galletas$group <- "Con outlier"
galletas_no_outlier$group <- "Sin outlier"

# Combine both datasets
combined_data <- bind_rows(galletas, galletas_no_outlier)

# Base plot
base_cookies <- ggplot(combined_data, aes(x = galletas, y = felicidad, group = group)) + 
  geom_point(size = 3) +
  coord_cartesian(xlim = c(0, 10), ylim = c(0, 8)) +
  scale_x_continuous(breaks = 0:10) +
  labs(x = "Galletas consumidas", y = "Nivel de Felicidad") +
  theme_minimal(base_size = 14) +
  theme(panel.grid.minor = element_blank(),
        plot.title = element_text(face = "bold"))

# Plot with legend for solid and dashed lines
base_cookies +
  geom_smooth(aes(color = group, linetype = group), method = "lm", se = FALSE) + 
  scale_color_manual(values = c("Con outlier" = "#0074D9", "Sin outlier" = "red")) +
  scale_linetype_manual(values = c("Con outlier" = "solid", "Sin outlier" = "dashed")) +
  labs(title = "",
       color = "Regresión", linetype = "Regresión")

```


## Efecto interacción {.medium}

Hasta ahora hemos asumido que el efecto de una variable es independiente de otra:

$$
y = \beta_0 + \beta_1 x_1 + \beta_2 x_2 + e
$$
El efecto del incremento en una unidad de $x_1$ en $y$, es siempre $\beta_1$ e independiente de $x_2$


. . . 

Por ejemplo:


$$\widehat{Felicidad}=\hat{\beta_0}+\hat{\beta_1}\times Galletas+\hat{\beta_2} \times Estudiante $$


## Efecto interacción {.medium}

Si pensamos que el efecto de $X_1$ depende del valor de $X_2$, entonces debemos agregar una tercera variable de interacción al modelo:

$$
y = \beta_0 + \beta_1 x_1 + \beta_2 x_2 + \beta_3 x_1x_2+ e
$$
El termino de interacción es $x_1x_2$

. . . 

Por ejemplo:


$$  
  \begin{aligned}
\widehat{Felicidad}=&\hat{\beta_0}+\hat{\beta_1}\times Galletas+\hat{\beta_2} \times Estudiante \\
  & + \hat{\beta_3}\times Galletas*Estudiante
\end{aligned}
$$


## Interacciones {.medium}

El modelo donde las galletas tienen el mismo efecto para <font color="#000080">profesores</font> y <font color="#8B0000">estudiantes</font>

```{r}
#| echo: false
# Set seed
set.seed(12345)
# Sample size
n <- 1e3
# Parameters
beta0 <- 20; beta1 <- 0.5; beta2 <- 10; beta3 <- 3
# Dataset
int_df <- tibble(
  male = sample(x = c(F, T), size = n, replace = T),
  school = runif(n, 3, 9) - 3 * male,
  pay = beta0 + beta1 * school + beta2 * male + rnorm(n, sd = 7) + beta3 * male * school
)
reg_noint <- lm(pay ~ school + male, int_df)
reg_int <- lm(pay ~ school + male + school:male, int_df)
```


```{r}
#| echo: false
#| eval: true
#| fig-align: center
#| fig-width: 10

ggplot(data = int_df, aes(x = school, y = pay)) +
geom_point(aes(color = male, shape = male), size = 2.5) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
geom_abline(
  intercept = reg_noint$coefficients[1] + reg_noint$coefficients[3],
  slope = reg_noint$coefficients[2],
  color = "darkred", size = 1, alpha = 0.8
) +
geom_abline(
  intercept = reg_noint$coefficients[1],
  slope = reg_noint$coefficients[2],
  color = "navy", size = 1, alpha = 0.8
) +
xlab("Galletas") +
ylab("Felicidad") +
theme_empty +
theme(
  axis.title = element_text(size = 18),
  plot.margin = structure(c(0, 0, 0.1, 0), unit = "lines", valid.unit = 3L, class = "unit"),
) +
scale_color_manual("", values = c("navy", "darkred"), labels = c("Female", "Male")) +
scale_shape_manual("", values = c(16, 1), labels = c("Female", "Male"))
```


## Interacciones {.medium}

El modelo donde el efecto de las galletas puede diferir para <font color="#000080">profesores</font> y <font color="#8B0000">estudiantes</font>


```{r}
#| echo: false
#| eval: true
#| fig-align: center
#| fig-width: 10
#| 
ggplot(data = int_df, aes(x = school, y = pay)) +
geom_point(aes(color = male, shape = male), size = 2.5) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
geom_abline(
  intercept = reg_noint$coefficients[1] + reg_noint$coefficients[3],
  slope = reg_noint$coefficients[2],
  color = "darkred", size = 0.75, alpha = 0.2
) +
geom_abline(
  intercept = reg_noint$coefficients[1],
  slope = reg_noint$coefficients[2],
  color = "navy", size = 0.75, alpha = 0.2
) +
geom_abline(
  intercept = reg_int$coefficients[1] + reg_int$coefficients[3],
  slope = reg_int$coefficients[2] + reg_int$coefficients[4],
  color = "darkred", size = 1, alpha = 0.8
) +
geom_abline(
  intercept = reg_int$coefficients[1],
  slope = reg_int$coefficients[2],
  color = "navy", size = 1, alpha = 0.8
) +
xlab("Galletas") +
ylab("Felicidad") +
theme_empty +
theme(
  axis.title = element_text(size = 18),
  plot.margin = structure(c(0, 0, 0.1, 0), unit = "lines", valid.unit = 3L, class = "unit"),
) +
scale_color_manual("", values = c("navy", "darkred"), labels = c("Female", "Male")) +
scale_shape_manual("", values = c(16, 1), labels = c("Female", "Male"))
```