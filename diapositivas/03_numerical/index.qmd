---
title: Analítica de Datos
author: Carlos Cardona Andrade
subtitle: Explorando datos numéricos
execute:
  freeze: auto
  echo: true
  fig-width: 6
  fig-height: 5
format:
  revealjs: 
   theme: ../slides.scss
   header-includes: |
      <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css" rel="stylesheet"/>
   slide-number: true
   show-slide-number: all
   transition: fade
   progress: true
   multiplex: false
   scrollable: false
   preview-links: false
   hide-inactive-cursor: true
   highlight-style: printing
   pause: true
---
     
```{r}
#| eval: true
#| echo: false
library(knitr)
library(forcats)
library(patchwork)
library(lubridate)
library(cowplot)
library(tidyverse)
library(kableExtra)
library(openintro)
library(janitor)
library(ggrepel)
library(scales)

```


## Plan para hoy

1. [tidy data](#tidy)


2. [ggplot](#ggplot)


3. [dplyr](#dplyr)


4. [Diagrama de caja](#boxplot)



# Fundamentos sobre los datos

## Tipos de variables

```{r}
#| echo: false
#| fig-align: center

par_og <- par(no.readonly = TRUE) # save original par
par(mar = rep(0, 4))
plot(c(-0.15, 1.3), 0:1, type = "n", axes = FALSE)

text(0.6, 0.9, "Variables")
rect(0.4, 0.8, 0.8, 1)

text(0.25, 0.5, "Numéricas")
rect(0.1, 0.4, 0.4, 0.6)
arrows(0.45, 0.78, 0.34, 0.62, length = 0.08)

text(0.9, 0.5, "Categóricas")
rect(0.73, 0.4, 1.07, 0.6)
arrows(0.76, 0.78, 0.85, 0.62, length = 0.08)

text(0, 0.1, "Discretas")
rect(-0.17, 0, 0.17, 0.2)
arrows(0.13, 0.38, 0.05, 0.22, length = 0.08)

text(0.39, 0.1, "Continuas")
rect(0.25, 0, 0.53, 0.2)
arrows(0.35, 0.38, 0.4, 0.22, length = 0.08)

text(0.77, 0.105, "Ordinales")
rect(0.64, 0, 0.9, 0.2)
arrows(0.82, 0.38, 0.77, 0.22, length = 0.08)

text(1.12, 0.1, "Nominales")
rect(0.99, 0, 1.25, 0.2)
arrows(1.02, 0.38, 1.1, 0.22, length = 0.08)
par(par_og) # restore original par
```
   
   
## Variables numéricas

```{r}
#| echo: false
#| fig-align: center

par_og <- par(no.readonly = TRUE) # Save original par
par(mar = rep(0, 4))
plot(c(-0.15, 1.3), 0:1, type = "n", axes = FALSE)

# Main category
text(0.6, 0.9, "Variables")
rect(0.4, 0.8, 0.8, 1)

# Numerical section (bold)
text(0.25, 0.5, "Numéricas")
rect(0.1, 0.4, 0.4, 0.6)
arrows(0.45, 0.78, 0.34, 0.62, length = 0.08)

text(0, 0.1, "Discretas")
rect(-0.17, 0, 0.17, 0.2)
arrows(0.13, 0.38, 0.05, 0.22, length = 0.08)

text(0.39, 0.1, "Continuas")
rect(0.25, 0, 0.53, 0.2)
arrows(0.35, 0.38, 0.4, 0.22, length = 0.08)

# Categorical section (grayed out)
text(0.9, 0.5, "Categóricas", col = "gray50")
rect(0.73, 0.4, 1.07, 0.6, border = "gray50")
arrows(0.76, 0.78, 0.85, 0.62, length = 0.08, col = "gray50")

text(0.77, 0.105, "Ordinales", col = "gray70")
rect(0.64, 0, 0.9, 0.2, border = "gray70")
arrows(0.82, 0.38, 0.77, 0.22, length = 0.08, col = "gray70")

text(1.12, 0.1, "Nominales", col = "gray70")
rect(0.99, 0, 1.25, 0.2, border = "gray70")
arrows(1.02, 0.38, 1.1, 0.22, length = 0.08, col = "gray70")

par(par_og) # Restore original par

```

## Variables numéricas {.medium}

Una variable es [numérica]{.hl .hl-blue} cuando puede tomar una amplia gama de valores numéricos y tiene sentido realizar operaciones aritméticas (suma, resta, promedio) con esos valores. De lo contrario, es [categórica]{.hl .hl-blue}.

. . .

Pueden ser:

  - [Discretas]{.hl .hl-blue} si sus posibles valores forman un conjunto de valores separados, como 0, 1, 2, 3...
  
  - [Continuas]{.hl .hl-blue} si sus posibles valores forman un intervalo
   
## Tipos de variables {.medium}

```{r}
#| echo: false

email50 |> 
  select(spam, num_char, line_breaks, format, number) |>
  mutate(spam =ifelse(spam==1, "yes", "no" ),
         format = ifelse(format==1, "html", "text")) |>
  head(10)
```



::: {.incremental}

- spam $\rightarrow$ [categórica]{.marker-hl}

- num_char $\rightarrow$ [numérica]{.marker-hl}

- line_breaks $\rightarrow$ [numérica]{.marker-hl}

- format $\rightarrow$ [categórica/nominal]{.marker-hl}

- number $\rightarrow$ [categórica/ordinal]{.marker-hl}
:::


# Histogramas

## ¿Cómo hacer un histograma? {.medium}

Paso 1: Dividir el rango de los valores en intervalos

. . .

Paso 2: Contar el número de observaciones en cada intervalo

. . .

<br>

```{r}
#| eval: true
#| echo: false
library(gapminder)
gapminder |>
  mutate(lifeExp_cat = cut(lifeExp, breaks = seq(20, 90, 10))) |>
  count(lifeExp_cat, name = "Count") |>
  separate(lifeExp_cat, into = c("lower", "upper"), sep = ",") |>
  mutate(
    lower = str_remove(lower, "\\("),
    upper = str_remove(upper, "]"),
    lower = str_c("(", lower),
    upper = str_c(upper, "]")
  ) |>
  unite("Life Expectancy", lower:upper, sep = " - ") |>
  kbl(linesep = "", booktabs = TRUE, align = "lr") |>
  kable_styling(
    bootstrap_options = c("striped", "condensed"),
    latex_options = c("striped"),
    full_width = FALSE
  ) |>
  column_spec(1:2, width = "9em")
```


## ¿Cómo hacer un histograma? {.medium}

Paso 3: Dibujar el histograma
  
  - No debe haber espacio entre las barras
  
  - Nombrar el eje horizontal (con unidades!)
  
```{r}
#| echo: false
#| fig-align: center
#| fig-width: 5
#| fig-height: 5
ggplot(gapminder, aes(x = lifeExp)) +
  geom_histogram(breaks = seq(20, 90, 10), fill="lightblue", color="darkblue") +
  labs(x = "Life Expectancy (years)", y = "Count") +
  scale_x_continuous(
    breaks = seq(20, 90, 10)
    ) + theme_minimal()
```


## Histogramas {.medium}

- Los histogramas proporcionan una visión de la [densidad de los datos]{.hl .hl-blue}. Barras más altas indican regiones con más observaciones.

. . .

- Los histogramas son especialmente útiles para describir la [forma]{.hl .hl-blue} de la distribución de los datos.

. . .

- La selección del [ancho de las barras]{.hl .hl-blue} puede alterar la forma del histograma.


## El histograma en R {.medium}

::::: {.columns}

:::: {.column width="50%"}
```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "1|2"
ggplot(gapminder) +
  geom_histogram(aes(x=lifeExp))
```

::::

:::: {.column  width="50%"}

```{r}
#| echo: false
#| fig-align: center
#| out-width: 100%
ggplot(gapminder) +
  geom_histogram(aes(x=lifeExp))
```
::::

:::::


## El histograma en R {.medium}

::::: {.columns}

:::: {.column width="50%"}
```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "2,3,4|5,6|7"
ggplot(gapminder) +
  geom_histogram(aes(x=lifeExp),
                 fill = "lightblue",
                 color = "darkblue")+
  labs(y = "Count",
       x = "Life Expectancy (years)") +
  theme_minimal()
```

::::

:::: {.column  width="50%"}

```{r}
#| echo: false
#| fig-align: center
#| out-width: 100%
ggplot(gapminder) +
  geom_histogram(aes(x=lifeExp),
                 fill = "lightblue",
                 color = "darkblue")+
  labs(y = "Count",
       x = "Life Expectancy (years)") +
  theme_minimal()
```
::::

:::::


## El histograma en R {.medium}

::::: {.columns}

:::: {.column width="50%"}
```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "5"
ggplot(gapminder) +
  geom_histogram(aes(x=lifeExp),
                 fill = "lightblue",
                 color = "darkblue",
                 bins = 10)+
  labs(y = "Count",
       x = "Life Expectancy (years)") +
  theme_minimal()
```

::::

:::: {.column  width="50%"}

```{r}
#| echo: false
#| fig-align: center
#| out-width: 100%
ggplot(gapminder) +
  geom_histogram(aes(x=lifeExp),
                 fill = "lightblue",
                 color = "darkblue",
                 bins = 10)+
  labs(y = "Count",
       x = "Life Expectancy (years)") +
  theme_minimal()
```
::::

:::::


## El histograma en R {.medium}

::::: {.columns}

:::: {.column width="50%"}
```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "5"
ggplot(gapminder) +
  geom_histogram(aes(x=lifeExp),
                 fill = "lightblue",
                 color = "darkblue",
                 bins = 20)+
  labs(y = "Count",
       x = "Life Expectancy (years)") +
  theme_minimal()
```

::::

:::: {.column  width="50%"}

```{r}
#| echo: false
#| fig-align: center
#| out-width: 100%
ggplot(gapminder) +
  geom_histogram(aes(x=lifeExp),
                 fill = "lightblue",
                 color = "darkblue",
                 bins = 20)+
  labs(y = "Count",
       x = "Life Expectancy (years)") +
  theme_minimal()
```
::::

:::::


## Prueben diferentes anchos de barras (# bins) {.medium}

¿Qué histograma revela mucho sobres los datos?¿Cuál muy poco?

```{r}
#| echo: false
#| layout-ncol: 2
#| fig-align: center
#| fig-width: 4
#| fig-height: 2.5

ggplot(gapminder, aes(x = lifeExp)) +
  geom_histogram(bins=5, fill="lightblue", color="darkblue") +
  labs(x = "Life Expectancy (years)", y = "Count") + 
  theme_minimal()

ggplot(gapminder, aes(x = lifeExp)) +
  geom_histogram(bins=10, fill="lightblue", color="darkblue") +
  labs(x = "Life Expectancy (years)", y = "Count") + 
  theme_minimal()

ggplot(gapminder, aes(x = lifeExp)) +
  geom_histogram(bins=20, fill="lightblue", color="darkblue") +
  labs(x = "Life Expectancy (years)", y = "Count") + 
  theme_minimal()

ggplot(gapminder, aes(x = lifeExp)) +
  geom_histogram(bins=30, fill="lightblue", color="darkblue") +
  labs(x = "Life Expectancy (years)", y = "Count") + 
  theme_minimal()
```

## Selección del ancho de barras (# bins) {.medium}

Es un proceso iterativo: prueba con diferentes números.

. . .

¿Qué ancho de banda deberían usar?

  - No tan pocos como para que la mayoría de las barras tengan 0 o 1 observaciones.

  - No tantos como para perder los detalles dentro de un barra.
  
  - (No haya un número de barras “perfecto” y único).
  
. . .

Regla general: **cuantas más observaciones haya, más barras se deben usar.**

## ¿Qué mirar en un histograma? {.medium}

[Centro]{.marker-hl}

• ¿Dónde está el "medio" del histograma?

• Se representa usualmente con la [media]{.hl .hl-blue} y la [mediana]{.hl .hl-blue}.

. . . 

<br>

[Dispersión]{.marker-hl}

• ¿Cuál es el rango de los datos?

• Se representa usualmente con la [desviación estándar]{.hl .hl-blue} y el [rango intercuartílico]{.hl .hl-blue} (se explicará pronto).


## ¿Qué mirar en un histograma? {.medium}

[Forma]{.marker-hl}

• Simétrica o sesgada (asimétrica).

• Número de modas (picos).

. . .

<br>

[Valores atípicos (Outliers)]{.marker-hl}

• ¿Hay observaciones que están fuera del patrón general?

• Pueden ser valores inusuales o errores. ¡Revísenlos!




## Asimetría en los Histogramas {.medium}

### distribución sesgada a la izquierda (-), simétrica y sesgada a la derecha (+)


```{r}
#| echo: false
#| fig-align: center
#| fig-width: 10

p1 <- ggplot(gapminder) +
  geom_histogram(aes(x=log(lifeExp)), bins = 10 , fill="lightblue", color="darkblue")+
  labs(y = "",
       x = "") +
  theme_minimal() +
  theme(axis.text = element_blank())  # Remove axis numbers


p2 <- ggplot(gapminder) +
  geom_histogram(aes(x=log(pop)), bins = 10 , fill="lightblue", color="darkblue")+
  labs(y = "",
       x = "") +
  theme_minimal() +
  theme(axis.text = element_blank())  # Remove axis numbers

p3 <- ggplot(gapminder) +
  geom_histogram(aes(x=gdpPercap), bins = 10 , fill="lightblue", color="darkblue")+
  labs(y = "",
       x = "") +
  theme_minimal() +
  theme(axis.text = element_blank())  # Remove axis numbers

p1+p2+p3

```


## Moda en los Histogramas {.medium}

### Un ejemplo de distribución unimodal, bimodal y multimodal

```{r}
#| echo: false
#| fig-align: center
#| fig-width: 10
df_modes <- tibble(
  uni   = rchisq(65, 6),
  bi    = c(rchisq(25, 5.8), rnorm(40, 20, 2)),
  multi =  c(rchisq(25, 3), rnorm(25, 15), rnorm(15, 25, 1.5))
)

p_uni <- ggplot(df_modes, aes(x = uni)) +
  geom_histogram(binwidth = 2, fill="lightblue", color="darkblue") +
  labs(x = NULL, y = NULL) +
  ylim(0, 23) +
  xlim(0, 30) + theme_minimal()
p_bi <- ggplot(df_modes, aes(x = bi)) +
  geom_histogram(binwidth = 2, fill="lightblue", color="darkblue") +
  labs(x = NULL, y = NULL) +
  ylim(0, 23) +
  xlim(0, 30) + theme_minimal()
p_multi <- ggplot(df_modes, aes(x = multi)) +
  geom_histogram(binwidth = 2, fill="lightblue", color="darkblue") +
  labs(x = NULL, y = NULL) +
  ylim(0, 23) +
  xlim(0, 30) + theme_minimal()

p_uni + p_bi + p_multi
```


## Ejemplo con la Expectativa de vida

```{r}
#| echo: false
#| fig-width: 10
#| fig-align: center

ggplot(gapminder, aes(x = lifeExp)) +
  geom_histogram(bins=20, fill="lightblue", color="darkblue") +
  labs(x = "Life Expectancy (years)", y = "Count") + 
  theme_minimal()

```

. . .

Adicional al pico cerca a los 70 años, pareciera existir otro pico a los 40-45 años.


## La expectativa de vida es... {.medium}

```{r}
#| echo: false
#| fig-align: center
#| fig-width: 7
ggplot(gapminder) +
  geom_histogram(aes(x=lifeExp), bins = 20, fill="lightblue", color="darkblue") +
  labs(y = "Count",
       x = "Life Expectancy (years)") +
  theme_minimal() +
  facet_wrap(~continent, ncol = 1)
```

::: {.absolute top="10%" right="-15%" width="340px" .textbox .fragment .fade-up style="font-size:1.7rem;padding:0.5rem 1rem;" .altlist}
Mucho más baja y con alta variación en África
:::

::: {.absolute bottom="10%" left="-10%" width="340px" .textbox .fragment .fade-up style="font-size:1.7rem;padding:0.5rem 1rem;" .altlist}
Uniforme y alta en Europa y Oceanía
:::


# La media y la mediana

## La media {.medium}
Es la suma de todos los valores dividida entre el número de valores observados:

$$\bar{x} = \dfrac{x_1+x_2+...+x_n}{n}$$

. . .

**Ejemplo.** Supongamos que tenemos los siguientes valores:

$$4, 8, 3, 5, 13$$
La media de la variable será:

$$\bar{x} = \dfrac{4+8+3+5+13}{5}=\dfrac{33}{5}=6.6$$

## La mediana {.medium}

Es el valor que denota el punto medio en una distribución ordenada. En otras palabras, 50% de los valores están por debajo de este valor.


**Ejemplo 1** Supongamos que tenemos los siguientes valores: 4, 8, 3, 5, 13.

$$\begin{align*}
\text{datos} &\to 4 \quad 8\quad 3\quad 5\quad 13 \\
\text{organizados} &\to 3 \quad 4\quad {\color{orange} 5}\quad 8\quad 13 \\
\end{align*}$$

La mediana es 5.

## La mediana {.medium}

Es el valor que denota el punto medio en una distribución ordenada. En otras palabras, 50% de los valores están por debajo de este valor.


**Ejemplo 2** Supongamos que tenemos los siguientes valores: 4, 8, 3, 5, 13, 12..

$$
\begin{align*}
\text{datos} &\to 4\quad 8\quad 3\quad 5\quad 13\quad 12 \\
\text{organizados} &\to 3\quad 4 \quad {\color{orange} 5}\quad {\color{orange} 8}\quad 12\quad 13 \\
\end{align*}
$$

La mediana es $\frac{5 + 8}{2} = 6,5$.


## Media vs Mediana {.medium}


```{r}
#| echo: false
#| fig-align: center
#| fig-width: 7
mean_median_values <- gapminder |>
  group_by(continent) |>
  summarize(
    mean_lifeExp = mean(lifeExp, na.rm = TRUE),
    median_lifeExp = median(lifeExp, na.rm = TRUE)
  )

# Create the plot
ggplot(gapminder) +
  geom_histogram(aes(x=lifeExp), bins = 20, fill="lightblue", color="darkblue") +
  labs(y = "Count", x = "Life Expectancy (years)") +
  theme_minimal() +
  facet_wrap(~continent, ncol = 1) +
  geom_vline(data = mean_median_values, aes(xintercept = mean_lifeExp, color = "Mean"),
             linetype = "dashed", size = 1) +
  geom_vline(data = mean_median_values, aes(xintercept = median_lifeExp, color = "Median"),
             linetype = "dashed", size = 1) +
  scale_color_manual(values = c("Mean" = "darkred", "Median" = "darkgreen")) +
  guides(color = guide_legend(title = NULL)) +  # Remove the legend title
  theme(legend.position = "top")
```

::: {.absolute top="10%" left="-10%" width="380px" .textbox .fragment .fade-up style="font-size:1.7rem;padding:0.5rem 1rem;" .altlist}
¿Cuál distribución es simétrica?
:::

::: {.absolute top="10%" right="-10%" width="380px" .textbox .fragment .fade-up style="font-size:1.7rem;padding:0.5rem 1rem;" .altlist}
¿Cuál distribución es sesgada?
:::

## La media y la mediana en R {.medium}

La media se calcula con la función `mean()`:

```{r}
#| echo: true
mean(gapminder$lifeExp)
```

. . . 

La mediana se calcula con la función `median()`:

```{r}
#| echo: true
median(gapminder$lifeExp)
```
. . . 

Comparemos para cada continente:

```{r}
#| echo: true
gapminder |>
  group_by(continent) |>
   summarise(mean_lexp = mean(lifeExp),
             median_lexp = median(lifeExp))
```

# Resumen de los Cinco Números

## Cuartiles y Resumen de Cinco Números {.medium}

- Los cuartiles dividen los datos en 4 partes iguales.  
    - **Primer cuartil ($Q_1$)** = percentil 25:  
       El 25% de los datos están por debajo y el 75% por encima.
       
    - **Segundo cuartil ($Q_2$)** = mediana = percentil 50  
    
    - **Tercer cuartil ($Q_3$)** = percentil 75:  
       El 75% de los datos están por debajo y el 25% por encima. 
       
. . .
       
- **Rango intercuartílico** (IQR) = $Q_3 − Q_1$  

. . .
  
- **Resumen de cinco números**: 

  $$ min \quad Q_1 \quad mediana \quad Q3 \quad max  $$

## Cuartiles {.medium}
- Se calculan de acuerdo a la posición en los datos ordenados:

$$Q_1 = \dfrac{n+1}{4}$$
$$Q_2 = \dfrac{n+1}{2}$$

$$Q_3 = \dfrac{3(n+1)}{4}$$
- Donde $n$ es el número de valores.


## Cuartiles {.medium}

$$X=11, 12, 13, 16, 16, 17, 18, 21, 22$$
- $Q_1$ está en la posición $\dfrac{(9+1)}{4}=2.5$

- Calculamos el promedio de los valores en la posición 2 y 3.

$$Q_1=\dfrac{12+13}{2}=12.5$$

## Cuartiles {.medium}

$$X=11, 12, 13, 16, 16, 17, 18, 21, 22$$

- $Q_2: \dfrac{(9+1)}{2}=5$posición
$$Q_2=mediana=16$$

- $Q_3: \dfrac{3*(9+1)}{4}=7.5$ posición

$$Q_3=\dfrac{18+21}{2}=19.5$$

## Resumen de los cinco números {.medium}

$$X=11, 12, 13, 16, 16, 17, 18, 21, 22$$

- Min: 11

- $Q_1$: 12.5

- Mediana: 16

- $Q_3$: 19.5

- Max: 22

. . .

### IQR

- $Q_3 − Q_1$: 19.5 - 12.5 = 7 

## Cálculo de los cuartiles {.medium}

De hecho, los estadísticos no tienen un consenso sobre el cálculo de los cuartiles. Existen varias fórmulas para los cuartiles, que varían de un libro a otro y de un software a otro.

. . .

Retomemos el ejemplo de la diapositiva anterior, donde $Q_1$ = 12.5, $Q_2$ = 16 y $Q_3$ = 19.5


```{r}
#| echo: true
 x = c(11,12,13,16,16,17,18,21,22)
summary(x)
fivenum(x)
```


## Cálculo de los cuartiles {.medium}

Incluso diferentes comandos en R a veces reportan diferente cuartiles:


```{r}
#| echo: true
y = c(43,35,43,33,38,53,64,27,34,27)
summary(y)
fivenum(y)
```

. . .

<br>
No se preocupen por la fórmula. Simplemente tengan en cuenta que:

<center>
[Los cuartiles dividen los datos en 4 partes iguales]{.hl .hl-dred}
<center>


# Diagrama de caja {#boxplot}

## El diagrama de caja

<br>

```{r}
#| eval: true
#| echo: false
#| fig-align: "center"
#| out-width: "60%"
knitr::include_graphics("img/boxplot.png")
```


## El diagrama de caja - RIC

<br>

```{r}
#| eval: true
#| echo: false
#| fig-align: "center"
#| out-width: "40%"
knitr::include_graphics("img/ric.png")
```

## Diagrama de caja - Outliers {.medium}

```{r}
#| echo: false
#| fig-align: center
#| fig-width: 9
ggplot(gapminder) +
  geom_boxplot(aes(x=lifeExp, y=continent)) +
   labs(y = "Continent",
       x = "Life Expectancy (years)") +
  theme_minimal()
```

Una observación se identifica como un posible valor atípico (*outlier*) si se encuentra más de 1.5 × RIC por debajo de $Q_1$ o por encima de $Q_3$

## Diagrama de caja vs Histograma {.medium}

```{r}
#| echo: false
#| fig-align: center
#| fig-width: 10
p1 <- ggplot(gapminder) +
  geom_boxplot(aes(x=lifeExp)) +
  labs(x = "Life Expectancy (years)") +
  theme_minimal()

p2 <- ggplot(gapminder) +
  geom_histogram(aes(x=lifeExp), bins = 10,
                 fill = "lightblue", color = "darkblue") + 
  labs(y = "Frecuency",
       x = "Life Expectancy (years)") +
  theme_minimal()

p1 + p2
```


## El diagrama de caja en R {.medium}

::::: {.columns}

:::: {.column width="50%"}
```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "2|1,2,3,4"
ggplot(gapminder) +
  geom_boxplot(aes(x=lifeExp)) +
  labs(x = "Life Expectancy (years)") +
  theme_minimal()
```

::::

:::: {.column  width="50%"}

```{r}
#| echo: false
#| fig-align: center
#| out-width: 100%
ggplot(gapminder) +
  geom_boxplot(aes(x=lifeExp)) + 
  labs(x = "Life Expectancy (years)") +
  theme_minimal()
```
::::

:::::


## El diagrama de caja en R {.medium}

::::: {.columns}

:::: {.column width="50%"}
```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "2|3"
ggplot(gapminder) +
  geom_boxplot(aes(y=lifeExp)) +
  labs(y = "Life Expectancy (years)") +
  theme_minimal()
```

::::

:::: {.column  width="50%"}

```{r}
#| echo: false
#| fig-align: center
#| out-width: 100%
ggplot(gapminder) +
  geom_boxplot(aes(y=lifeExp)) +
  labs(y = "Life Expectancy (years)") +
  theme_minimal()
```
::::

:::::

# Medidas de dispersión

## La desviación estándar {.medium}

Describe la forma en que los valores de una variable se dispersan a lo largo de la distribución en relación a la media.

Se calcula siguiendo la fórmula:
$$s_x=\sqrt{\dfrac{\sum{(x-\bar{x})^2}}{n-1}} $$

## La desviación estándar {.medium}

$$x = 1, 9 , 5, 8, 7$$

La media es $\bar{x}=6$. 

La [desviación]{.marker-hl} es la distancia de un valor a la media. El siguiente paso es calcular la desviación de cada valor:

$$
\begin{aligned}
1 - \bar{x} &= 7 - 6 = -5 \\
9 - \bar{x} &= 9 - 6 = 3 \\
&\vdots \\
7 - \bar{x} &= 7 - 6 = 1  \\
\end{aligned}
$$

## La desviación estándar {.medium}

Si calculamos el cuadrado de estas desviaciones y luego calculamos su promedio hallaremos la [varianza muestral]{.marker-hl}:

$$s^2=\dfrac{(-5)^2+(3)^2+(-1)^2+(2)^2+(1)^2}{5-1}=10$$

. . .

Dividimos por $n-1$ para que la varianza muestral sea más confiable y útil, según ciertas propiedades estadísticas.

. . . 

La desviación estándar se define como la raíz cuadrada de la varianza:

$$s_x=\sqrt{10}=3.16$$

## Algunas características de la desviación estándar {.medium}

- Sumar la misma constante a cada valor, NO modifica la desviación estándar

- Multiplicar cada valor por la misma constante, aumenta la desviación estándar en la misma proporción

- A diferencia de la varianza, la desviación estándar está en las mismas unidades que la variable original

## La desviación estándar vs la distribución de los datos {.medium}

<div style="margin-top: 50px;"></div>


::: columns
::: {.column width="33.3%"}
```{r}
#| echo: false
#| fig.align: 'center'
numbersA <- c(11,12,13,16,16,17,18,21)
# Generate the histogram
hist(numbersA, breaks = c(10:22),
     main = "Datos A = 11,12,13,16,16,17,18,21", xlab = "X", ylab = "",
     col = "#ebc034", border = "black", ylim = c(0, 3),
     cex.main = 2.5,  # Increase title size (default is 1)
     cex.axis = 1.8,  # Increase axis numbers size
     cex.lab = 2.2)   # Increase axis label size (default is 1)
abline(v = 15.5, col = "purple", lty = 2, lwd = 2) # lty=2 for dashed line, lwd=2 for line width


```

:::

::: {.column width="33.3%"}
```{r}
#| echo: false
#| fig.align: 'center'
numbersB <- c(14,15,15,15,16,16,16,17)
# Generate the histogram
hist(numbersB, breaks = c(10:22),
     main = "Datos B = 14,15,15,15,16,16,16,17", xlab = "X", ylab = "",
     col = "#3489eb", border = "black", ylim = c(0, 3),
     cex.main = 2.5,  # Increase title size (default is 1)
     cex.axis = 1.8,  # Increase axis numbers size
     cex.lab = 2.2)   # Increase axis label size (default is 1)
abline(v = 15.5, col = "purple", lty = 2, lwd = 2) # lty=2 for dashed line, lwd=2 for line width

```
:::

::: {.column width="33.3%"}
```{r}
#| echo: false
#| fig.align: 'center'
numbersC <- c(11,11,11,12,19,20,20,20)
# Generate the histogram
hist(numbersC, breaks = c(10:22),
     main = "Datos C = 11,11,11,12,19,20,20,20", xlab = "X", ylab = "",
     col = "#3ba342", border = "black", ylim = c(0, 3),
     cex.main = 2.5,  # Increase title size (default is 1)
     cex.axis = 1.8,  # Increase axis numbers size
     cex.lab = 2.2)   # Increase axis label size (default is 1)
abline(v = 15.5, col = "purple", lty = 2, lwd = 2) # lty=2 for dashed line, lwd=2 for line width

```
:::
:::

- Noten que las 3 muestras tienen la misma media: $\bar{x}=15.5$

- Las desvaciones estándar son <span style="color: #ebc034;">S=3.33</span>, <span style="color: #3489eb;">S=0.92</span> and <span style="color: #3ba342;">S=4.56</span>.


## La regla 68% y 95% {.medium}

- Aproximadamente el 68% de las observaciones estarán dentro de 1 desviación estándar de la media.

- Aproximadamente el 95% estarán dentro de 2 desviaciones estándar de la media.

- Ambas reglas funcionan **muy bien** para datos con forma de campana y **razonablemente bien** para datos unimodales y no muy sesgados, pero no para todos los datos.

## La regla 68% y 95% {.medium}

::: columns
::: {.column width="60%"}

```{r}
#| echo: false
#| fig-align: center
#| fig-width: 7

# Compute mean and standard deviation for each continent
mean_median_values <- gapminder |>
  group_by(continent) |>
  summarise(
    mean_lifeExp = mean(lifeExp),
    sd_lifeExp = sd(lifeExp)
  )

# Create a dataset for the polygons (±1 SD around the mean)
polygon_data <- mean_median_values |>
  mutate(
    x_min = mean_lifeExp - sd_lifeExp,
    x_max = mean_lifeExp + sd_lifeExp,
    y_min = 0,
    y_max = 100  # Adjust based on the histogram's scale
  )

# Plot histogram with polygon and mean line
ggplot(gapminder) +
  geom_histogram(aes(x = lifeExp), bins = 20, fill = "lightblue", color = "darkblue") +
  geom_rect(
    data = polygon_data,
    aes(xmin = x_min, xmax = x_max, ymin = y_min, ymax = y_max, fill = continent),
    alpha = 0.2
  ) +
  geom_vline(
    data = mean_median_values, 
    aes(xintercept = mean_lifeExp, color = "Mean"),
    linetype = "dashed", size = 1
  ) +
  scale_fill_manual(values = c("Africa" = "red", "Americas" = "red", 
                               "Asia" = "red", "Europe" = "red", "Oceania" = "red")) +
  scale_color_manual(values = c("Mean" = "darkred")) +
  labs(y = "Count", x = "Life Expectancy (years)") +
  theme_minimal() +
  facet_wrap(~continent, ncol = 1) +
  guides(fill = "none", color = guide_legend(title = NULL)) +  # Remove legend title
  theme(legend.position = "none")  # Removes all legends

```

:::

::: {.column width="40%"}
```{r}
#| echo: false
#| fig-align: center
#| fig-width: 7

# Unir la información de la media y la desviación estándar con el dataset original
gapminder_with_stats <- gapminder |>
  left_join(mean_median_values, by = "continent") |>
  mutate(
    within_1SD = lifeExp >= (mean_lifeExp - sd_lifeExp) & lifeExp <= (mean_lifeExp + sd_lifeExp)
  )

# Calcular la proporción de observaciones dentro de 1 SD por continente
proportion_1SD <- gapminder_with_stats |>
  group_by(continent) |>
  summarise(proportion_1SD = mean(within_1SD))

proportion_1SD
```
:::
:::



## La regla 68% y 95% {.medium}

::: columns
::: {.column width="60%"}

```{r}
#| echo: false
#| fig-align: center
#| fig-width: 7


# Create a dataset for the polygons (±1 SD around the mean)
polygon_data <- mean_median_values |>
  mutate(
    x_min = mean_lifeExp - 2*sd_lifeExp,
    x_max = mean_lifeExp + 2*sd_lifeExp,
    y_min = 0,
    y_max = 100  # Adjust based on the histogram's scale
  )

# Plot histogram with polygon and mean line
ggplot(gapminder) +
  geom_histogram(aes(x = lifeExp), bins = 20, fill = "lightblue", color = "darkblue") +
  geom_rect(
    data = polygon_data,
    aes(xmin = x_min, xmax = x_max, ymin = y_min, ymax = y_max, fill = continent),
    alpha = 0.2
  ) +
  geom_vline(
    data = mean_median_values, 
    aes(xintercept = mean_lifeExp, color = "Mean"),
    linetype = "dashed", size = 1
  ) +
  scale_fill_manual(values = c("Africa" = "red", "Americas" = "red", 
                               "Asia" = "red", "Europe" = "red", "Oceania" = "red")) +
  scale_color_manual(values = c("Mean" = "darkred")) +
  labs(y = "Count", x = "Life Expectancy (years)") +
  theme_minimal() +
  facet_wrap(~continent, ncol = 1) +
  guides(fill = "none", color = guide_legend(title = NULL)) +  # Remove legend title
  theme(legend.position = "none")  # Removes all legends

```

:::

::: {.column width="40%"}
```{r}
#| echo: false
#| fig-align: center
#| fig-width: 7

# Unir la información de la media y la desviación estándar con el dataset original
gapminder_with_stats <- gapminder_with_stats |>
  mutate(
    within_2SD = lifeExp >= (mean_lifeExp - 2*sd_lifeExp) & lifeExp <= (mean_lifeExp + 2*sd_lifeExp)
  )

# Calcular la proporción de observaciones dentro de 1 SD por continente
proportion_2SD <- gapminder_with_stats |>
  group_by(continent) |>
  summarise(proportion_2SD = mean(within_2SD))

proportion_2SD
```
:::
:::


## La desviación estándar en R {.medium}

La desviación estándar se calcula con la función `sd`: 

::: columns
::: {.column width="40%"}

```{r}
#| echo: true
gapminder |>
  group_by(continent) |>
  summarise(
    mean_lExp = mean(lifeExp),
    sd_lExp = sd(lifeExp)
  )
```

:::

::: {.column width="60%"}

```{r}
#| echo: false
#| fig-align: center
#| fig-width: 7
ggplot(gapminder) +
  geom_histogram(aes(x = lifeExp), bins = 20, fill = "lightblue", color = "darkblue") +
  geom_vline(
    data = mean_median_values, 
    aes(xintercept = mean_lifeExp, color = "Mean"),
    linetype = "dashed", size = 1
  ) +
  scale_color_manual(values = c("Mean" = "darkred")) +
  labs(y = "Count", x = "Life Expectancy (years)") +
  theme_minimal() +
  facet_wrap(~continent, ncol = 1) +
  theme(legend.position = "none")  # Removes all legends
```
:::
:::

# Diagramas de dispersión

## Diagramas de dispersión {.medium}

::: columns
::: {.column width="50%"}
```{r}
#| echo: false
#| fig.align: 'center'
ggplot(gapminder)+
  geom_point(aes(x=log(gdpPercap), y=lifeExp)) + 
  labs(x = "log(GDP per cápita)",
       y = "Life Expectancy") +
  theme_minimal()
```
:::

::: {.column width="50%"}
- Los gráficos de dispersión nos ayudan a visualizar y examinar la relación entre dos variables numéricas 
- Discutiremos dos medidas cuantitativas de esta relación:
    1. la covarianza
    2. la correlación
:::
:::

## El gráfico de dispersión en R {.medium}

::::: {.columns}

:::: {.column width="50%"}
```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "2|1,2,3,4,5"
ggplot(gapminder)+
  geom_point(aes(x=gdpPercap, y=lifeExp)) + 
  labs(x = "GDP per cápita",
       y = "Life Expectancy") +
  theme_minimal()
```

::::

:::: {.column  width="50%"}

```{r}
#| echo: false
#| fig-align: center
#| out-width: 100%
ggplot(gapminder)+
  geom_point(aes(x=gdpPercap, y=lifeExp)) + 
  labs(x = "log(GDP per cápita)",
       y = "Life Expectancy") +
  theme_minimal()
```
::::

::::


## El gráfico de dispersión en R {.medium}

::::: {.columns}

:::: {.column width="50%"}
```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "2|1,2,3,4,5"
ggplot(gapminder)+
  geom_point(aes(x=log(gdpPercap), y=lifeExp)) + 
  labs(x = "log(GDP per cápita)",
       y = "Life Expectancy") +
  theme_minimal()
```

::::

:::: {.column  width="50%"}

```{r}
#| echo: false
#| fig-align: center
#| out-width: 100%
ggplot(gapminder)+
  geom_point(aes(x=log(gdpPercap), y=lifeExp)) + 
  labs(x = "log(GDP per cápita)",
       y = "Life Expectancy") +
  theme_minimal()
```
::::

::::


## El gráfico de dispersión en R {.medium}

::::: {.columns}

:::: {.column width="50%"}
```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "2|5"
ggplot(gapminder)+
    geom_point(aes(x=log(gdpPercap), y=lifeExp, color = continent)) + 
    labs(x = "log(GDP per cápita)",
         y = "Life Expectancy") +
    scale_color_brewer(name = "Continent", palette = "Dark2") +
    theme_minimal()
```

::::

:::: {.column  width="50%"}

```{r}
#| echo: false
#| fig-align: center
#| out-width: 100%
ggplot(gapminder)+
    geom_point(aes(x=log(gdpPercap), y=lifeExp, color = continent)) + 
    labs(x = "log(GDP per cápita)",
         y = "Life Expectancy") +
    scale_color_brewer(name = "Continent", palette = "Dark2") +
    theme_minimal()
```
::::

::::

## Covarianza {.medium}

- La covarianza mide qué tan fuerte es la relación (lineal) de *dos variables numéricas*.

- La covarianza muestra:

$$cov(X,Y)=\dfrac{\sum_{i=1}^{n}(X_i-\bar{X})(Y_i-\bar{Y})}{n-1}$$

- Solamente mide la "dirección" de la relación.

## Interpretación de la covarianza {.medium}

- La covarianza entre dos variables:
  - $cov(X,Y)>0 \rightarrow$ $X$ y $Y$ se mueven en la misma dirección.
  - $cov(X,Y)<0 \rightarrow$ $X$ y $Y$ se mueven en dirección opuesta.
  - $cov(X,Y)=0 \rightarrow$ $X$ y $Y$ son independientes.
- El defecto de la covarianza es que no indica la intensidad de la relación entre las dos variables

## Correlación {.medium}

- La correlación mide la dirección y la fuerza de la relación lineal entre dos variables numéricas.

$$r=\dfrac{cov(X,Y)}{S_xS_y}$$

## Características de la correlación {.medium}

- $-1< r < 1$
- $r$ no cambia cuando se cambian las unidades de medida de $X$, $Y$ o ambas.
- $r$ no tiene unidad de medida
- Más cerca a -1, más fuerte `la relación lineal negativa`.
- Más cerca a 1, más fuerte `la relación lineal positiva`.
- Más cerca a 0, más dÃ©bil `la relación lineal`.


## El gráfico de dispersión en R {.medium}

::::: {.columns}

:::: {.column width="60%"}
```{r}
#| echo: false
ggplot(gapminder)+
    geom_point(aes(x=log(gdpPercap), y=lifeExp, color = continent)) + 
    labs(x = "log(GDP per cápita)",
         y = "Life Expectancy") +
    scale_color_brewer(name = "Continent", palette = "Dark2") +
    theme_minimal()
```

::::

:::: {.column  width="40%"}

```{r}
#| echo: false
gapminder |> 
  group_by(continent) |>
  summarise(
    corr = cor(lifeExp, gdpPercap)
    )
```
::::

::::