---
title: Analítica de los Negocios
author: Carlos Cardona Andrade
subtitle: Distribución muestral e Intervalos de Confianza
execute:
  freeze: auto
  echo: true
  fig-width: 6
  fig-height: 5
format:
  revealjs: 
   theme: ../slides.scss
   header-includes: |
      <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css" rel="stylesheet"/>
   slide-number: true
   show-slide-number: all
   transition: fade
   progress: true
   multiplex: false
   scrollable: false
   preview-links: false
   hide-inactive-cursor: true
   highlight-style: printing
   pause: true
---
     
```{r}
#| eval: true
#| echo: false
library(pacman)
p_load(broom, latex2exp, ggplot2, ggthemes, viridis, dplyr, magrittr, knitr, parallel,gtools)

theme_empty <- theme_bw() + theme(
  line = element_blank(),
  rect = element_blank(),
  strip.text = element_blank(),
  axis.text = element_blank(),
  plot.title = element_blank(),
  axis.title = element_blank(),
  plot.margin = structure(c(0, 0, 0, 0), unit = "lines", valid.unit = 3L, class = "unit"),
  legend.position = "none"
)


# Set population and sample sizes
n_p <- 100
n_s <- 30
# Set the seed
set.seed(12469)
# Generate data
pop_df <- tibble(
  i = 3,
  x = rnorm(n_p, mean = 10, sd = 3.5),
  e = rnorm(n_p, mean = 0, sd = 1),
  y = i + 0.5 * x + e,
  row = rep(1:sqrt(n_p), times = sqrt(n_p)),
  col = rep(1:sqrt(n_p), each = sqrt(n_p)),
  s1 = sample(x = c(rep(T, n_s), rep(F, n_p - n_s))),
  s2 = sample(x = c(rep(T, n_s), rep(F, n_p - n_s))),
  s3 = sample(x = c(rep(T, n_s), rep(F, n_p - n_s)))
)

pop_mean <- as.numeric(round(pop_df |> summarize(mean=mean(x, na.rm = T)),1))

pop_sd <- as.numeric(round(pop_df |> summarize(sd=sd(x, na.rm = T)),1))

```


## Plan para hoy

1. [Datos categóricos](#intro)

2. [Visualizandos una variable categórica](#1category)

3. [Visualizandos dos variables categóricas](#2categories)

4. [Comparando variables numéricas entre grupos](#acrossgroups)

5. [Probabilidad](#probabilidad)

6. [La Distribución Normal](#distnormal)


# Datos categóricos {#intro}

## Población y Muestra {.medium}

- Los estadísticos descriptivos discutidos anteriormente describen una **muestra**, pero no a la **población**. 

- Las medidas que describen a una población se llaman `parámetros`. Utilizamos letras griegas para referirnos a ellos. 

::: {.tbl-classic .tbl-larger .center-text}


| Medida                | Parámetro poblacional  | Estadístico muestral |
|:----------------------|:----------------------:|:--------------------:|
| Media                 |       $\mu$            |    $\bar{x}$         |
| Varianza              |       $\sigma^2$       |    $S^2$             |
| Desviación Estándar   |       $\sigma$         |    $S$               |

:::

## ¿Por qué nos importa tanto la población vs la muestra? {.medium}

- La inferencia estadística es el acto de generalizar a partir de una muestra para sacar conclusiones sobre una población.

. . .

- Nos interesan los parámetros poblacionales, los cuales no observamos. En su lugar, debemos calcular estadísticas a partir de nuestra muestra para aprender sobre ellos.

$$
\bar{x} \xrightarrow{\text{🤞 ojalá 🤞}} \mu
$$

. . .


- Como parte de este proceso, debemos cuantificar el grado de incertidumbre en nuestra estadística muestral.



## ¿Por qué nos importa tanto la población vs la muestra? {.medium}

Para responder a esta pregunta, utilicemos el siguiente ejemplo:

100 estudiantes están tomando Analítica de los Negocios y la universidad quiere saber el número de horas de estudio de todo ellos. Asumamos que tenemos los datos para todos los estudiantes.

## La distribución poblacional de horas de estudio {.medium}

::: columns
::: {.column width="50%"}

```{r}
#| echo: false
#| out-width: 100%
ggplot(data = pop_df, aes(x = row, y = col)) +
  geom_point(color = "darkslategray", size = 10) +
  theme_empty
```
:::

::: {.column width="50%"}

```{r}
#| echo: false
#| out-width: 100%
pop_df |>
ggplot(aes(x = x)) +
  geom_histogram(bins=15, fill="orange", color="darkred") +
    scale_x_continuous(limits = c(0, 20), breaks = c(0, 5, 10, 15, 20)) +
    scale_y_continuous(limits = c(0, 10), breaks = c(2, 4, 6, 8,10)) +
  labs(x="Hours of Studying",
       y="Frequency") +
  theme_minimal() 
```

La media **poblacional** ($\mu$) es `r round(pop_df |> summarize(mean=mean(x, na.rm = T)),1)`

:::
:::



## Horas de estudio para la Muestra 1 {.medium}

::: columns
::: {.column width="50%"}

```{r}
#| echo: false
#| out-width: 100%
ggplot(data = pop_df, aes(x = row, y = col, shape = s1)) +
  geom_point(color = "darkslategray", size = 10) +
  scale_shape_manual(values = c(1, 19)) +
  theme_empty
```
:::

::: {.column width="50%"}

```{r}
#| echo: false
#| out-width: 100%
pop_df |>
  filter(s1 == T) |>
ggplot(aes(x = x)) +
  geom_histogram(bins=15, fill="orange", color="darkred") +
    scale_x_continuous(limits = c(0, 20), breaks = c(0, 5, 10, 15, 20)) +
    scale_y_continuous(limits = c(0, 10), breaks = c(2, 4, 6, 8,10)) +
  labs(x="Hours of Studying",
       y="Frequency") +
  theme_minimal() 
```

La media **muestral** es `r round(pop_df |> filter(s1 == T) |> summarize(mean=mean(x, na.rm = T)),1)`

:::
:::


## Horas de estudio para la Muestra 2 {.medium}

::: columns
::: {.column width="50%"}

```{r}
#| echo: false
#| out-width: 100%
ggplot(data = pop_df, aes(x = row, y = col, shape = s2)) +
  geom_point(color = "darkslategray", size = 10) +
  scale_shape_manual(values = c(1, 19)) +
  theme_empty
```
:::

::: {.column width="50%"}

```{r}
#| echo: false
#| out-width: 100%
pop_df |>
  filter(s2 == T) |>
ggplot(aes(x = x)) +
  geom_histogram(bins=15, fill="orange", color="darkred") +
    scale_x_continuous(limits = c(0, 20), breaks = c(0, 5, 10, 15, 20)) +
      scale_y_continuous(limits = c(0, 10), breaks = c(2, 4, 6, 8,10)) +
  labs(x="Hours of Studying",
       y="Frequency") +
  theme_minimal() 
```

La media **muestral** es `r round(pop_df |> filter(s2 == T) |> summarize(mean=mean(x, na.rm = T)),1)`

:::
:::


## Horas de estudio para la Muestra 3 {.medium}

::: columns
::: {.column width="50%"}

```{r}
#| echo: false
#| out-width: 100%
ggplot(data = pop_df, aes(x = row, y = col, shape = s3)) +
  geom_point(color = "darkslategray", size = 10) +
  scale_shape_manual(values = c(1, 19)) +
  theme_empty
```
:::

::: {.column width="50%"}

```{r}
#| echo: false
#| out-width: 100%
pop_df |>
  filter(s3 == T) |>
ggplot(aes(x = x)) +
  geom_histogram(bins=15, fill="orange", color="darkred") +
    scale_x_continuous(limits = c(0, 20), breaks = c(0, 5, 10, 15, 20)) +
      scale_y_continuous(limits = c(0, 10), breaks = c(2, 4, 6, 8,10)) +
  labs(x="Hours of Studying",
       y="Frequency") +
  theme_minimal() 
```

La media **muestral** es `r round(pop_df |> filter(s3 == T) |> summarize(mean=mean(x, na.rm = T)),1)`

:::
:::


## ¿Por qué nos importa tanto la población vs la muestra? {.medium}

- Como vimos en los anteriores ejemplos, algunas muestras pueden estar lejos del valor real del parámetro poblacional (el número de horas de estudio promedio para todos los estudiantes tomando Analítica).

- Diferencias entre muestras individuales y la población llevan a la **incertidumbre** para el que está analizando el problema

. . .

### ¿Por qué nos importa tanto la población vs la muestra?

**Respuesta:** la incertidumbre importa!

Cuando tomamos una muestra, no sabemos si esta es una *buena* muestra ($\bar{x}$ está cerca a $\mu$) o una *mala* ($\bar{x}$ difiere mucho de $\mu$).


## Variabilidad de las Medias Muestrales {.medium}

Para entender cómo varían las medias muestrales de tamaño $n=30$ de nuestro ejemplo, tomemos 10 muestras y grafiquemos el histograma...


## Variabilidad de las Medias Muestrales {.medium}

::: columns
::: {.column width="50%"}

```{r}
#| echo: false
#| out-width: 100%
n_samples <- 10 # Number of samples to draw
sample_means <- replicate(n_samples, {
  sample_indices <- sample(1:n_p, n_s, replace = FALSE) # Random sample
  mean(pop_df$x[sample_indices]) # Calculate mean
})

# Visualize the sampling distribution
tibble(mean = sample_means) |>
  ggplot(aes(x = mean)) +
  geom_histogram(binwidth = 0.1, color = "darkblue", fill = "lightblue") +
geom_vline(xintercept = pop_mean, linetype = "dashed", color = "darkred", linewidth = 1.2) +
  scale_x_continuous(limits = c(7, 12), breaks = c(7, 8,9, 10,11, 12)) +
  labs(title = "Sampling Distribution of the Mean (Approximation)",
       x = "Sample Mean",
       y = "Frequency") +
  theme_minimal()
```
:::

::: {.column width="50%"}

Así luce la distribución de las medias muestrales para 10 muestras. 


::: {.fragment}
Sin embargo, no se pueden sacar muchas conclusiones con base en el gráfico. 
:::

:::
:::





## Variabilidad de las Medias Muestrales {.medium}

::: columns
::: {.column width="50%"}

```{r}
#| echo: false
#| out-width: 100%
n_samples <- 100 # Number of samples to draw
sample_means <- replicate(n_samples, {
  sample_indices <- sample(1:n_p, n_s, replace = FALSE) # Random sample
  mean(pop_df$x[sample_indices]) # Calculate mean
})

# Visualize the sampling distribution
tibble(mean = sample_means) |>
  ggplot(aes(x = mean)) +
  geom_histogram(binwidth = 0.1, color = "darkblue", fill = "lightblue") +
  geom_vline(xintercept = pop_mean, linetype = "dashed", color = "darkred", linewidth = 1.2) +
        scale_x_continuous(limits = c(7, 12), breaks = c(7, 8,9, 10,11, 12)) +
  labs(title = "Sampling Distribution of the Mean (Approximation)",
       x = "Sample Mean",
       y = "Frequency") +
  theme_minimal()
```
:::

::: {.column width="50%"}

¿Qué pasa si tomamos 100 muestras? 


::: {.fragment}
🤔 Hmmm cierta forma ya conocida empieza a emerger...
:::


:::
:::



## Gráfico de barras {.medium}

::: columns
::: {.column width="50%"}

```{r}
#| echo: false
#| out-width: 100%
n_samples <- 1000 # Number of samples to draw
sample_means <- replicate(n_samples, {
  sample_indices <- sample(1:n_p, n_s, replace = FALSE) # Random sample
  mean(pop_df$x[sample_indices]) # Calculate mean
})

# Visualize the sampling distribution
tibble(mean = sample_means) |>
  ggplot(aes(x = mean)) +
  geom_histogram(binwidth = 0.1, color = "darkblue", fill = "lightblue") +
    geom_vline(xintercept = pop_mean, linetype = "dashed", color = "darkred", linewidth = 1.2) +
        scale_x_continuous(limits = c(7, 12), breaks = c(7, 8,9, 10,11, 12)) +
  labs(title = "Sampling Distribution of the Mean (Approximation)",
       x = "Sample Mean",
       y = "Frequency") +
  theme_minimal()
```
:::

::: {.column width="50%"}

¿Qué pasa si tomamos 1000 muestras?


::: {.fragment}
Ya es claro que la distribución tiende a ser normal...
:::

:::
:::


## Gráfico de barras {.medium}

::: columns
::: {.column width="50%"}

```{r}
#| echo: false
#| out-width: 100%
n_samples <- 10000 # Number of samples to draw
sample_means <- replicate(n_samples, {
  sample_indices <- sample(1:n_p, n_s, replace = FALSE) # Random sample
  mean(pop_df$x[sample_indices]) # Calculate mean
})

# Visualize the sampling distribution
tibble(mean = sample_means) |>
  ggplot(aes(x = mean)) +
  geom_histogram(binwidth = 0.1, color = "darkblue", fill = "lightblue") +
    geom_vline(xintercept = pop_mean, linetype = "dashed", color = "darkred", linewidth = 1.2) +
        scale_x_continuous(limits = c(7, 12), breaks = c(7, 8,9, 10,11, 12)) +
  labs(title = "Sampling Distribution of the Mean (Approximation)",
       x = "Sample Mean",
       y = "Frequency") +
  theme_minimal()
```
:::

::: {.column width="50%"}

¿Qué pasa si tomamos 10000 muestras?

::: {.fragment}
...y que la media de la distribución de medias muestrales es la media poblacional (la línea punteada)
:::

:::
:::




## Gráfico de barras {.medium}

::: columns
::: {.column width="50%"}

```{r}
#| echo: false
#| out-width: 100%
n_samples <- 10000 # Number of samples to draw
n_s2 <- 50
sample_means <- replicate(n_samples, {
  sample_indices <- sample(1:n_p, n_s2, replace = FALSE) # Random sample
  mean(pop_df$x[sample_indices]) # Calculate mean
})

# Visualize the sampling distribution
tibble(mean = sample_means) |>
  ggplot(aes(x = mean)) +
  geom_histogram(binwidth = 0.1, color = "darkblue", fill = "lightblue") +
    geom_vline(xintercept = pop_mean, linetype = "dashed", color = "darkred", linewidth = 1.2) +
        scale_x_continuous(limits = c(7, 12), breaks = c(7, 8,9, 10,11, 12)) +
  labs(title = "Sampling Distribution of the Mean (Approximation)",
       x = "Sample Mean",
       y = "Frequency") +
  theme_minimal()
```
:::

::: {.column width="50%"}

¿Qué pasa si tomamos 10000 muestras pero de 50 estudiantes?

::: {.fragment}
La variabilidad de las medias muestrales es menor. 
:::

:::
:::


## Gráfico de barras {.medium}

::: columns
::: {.column width="50%"}

```{r}
#| echo: false
#| out-width: 100%
n_samples <- 10000 # Number of samples to draw
n_s3 <- 70
sample_means <- replicate(n_samples, {
  sample_indices <- sample(1:n_p, n_s3, replace = FALSE) # Random sample
  mean(pop_df$x[sample_indices]) # Calculate mean
})

# Visualize the sampling distribution
tibble(mean = sample_means) |>
  ggplot(aes(x = mean)) +
  geom_histogram(binwidth = 0.1, color = "darkblue", fill = "lightblue") +
    geom_vline(xintercept = pop_mean, linetype = "dashed", color = "darkred", linewidth = 1.2) +
        scale_x_continuous(limits = c(7, 12), breaks = c(7, 8,9, 10,11, 12)) +
  labs(title = "Sampling Distribution of the Mean (Approximation)",
       x = "Sample Mean",
       y = "Frequency") +
  theme_minimal()
```
:::

::: {.column width="50%"}

¿Qué pasa si tomamos 10000 muestras pero de 70 estudiantes?

::: {.fragment}
A medida que el tamaño de la muestra $n$ es mayor, las muestras van a tener menos probabilidad de estar lejos del parámetro poblacional
:::


:::
:::


## ¿Qué podemos concluir de los histogramas anteriores? {.medium}

- La distribución muestral de la media muestral puede no ser normal cuando el tamaño de la muestra es pequeño, pero se vuelve más normal a medida que el tamaño de la muestra aumenta.

. . .

- La media muestral puede no ser igual a la media poblacional, pero su distribución se centra en la media poblacional.

. . .

- Con una muestra más grande, la variabilidad de la media muestral alrededor de la población disminuye.



## Teorema del Límite Central {.medium}

Para una población con una media bien definida $\mu$ y una desviación estándar $\sigma$ se cumplen estas tres propiedades para la distribución de la media muestral $\bar{x}$, siempre que se cumplan ciertas condiciones:

1. La media de la distribución muestral de la media es idéntica a la media poblacional $\mu$.

2. La desviación estándar de la distribución de las medias muestrales es $\dfrac{\sigma}{\sqrt{n}}$

Esto se llama el *error estándar* (SE) de la media.

3. Para un $n$ suficientemente grande, la forma de la distribución muestral de las medias es aproximadamente normal.

## Teorema del Límite Central {.medium}

Básicamente el teorema es:

$$\bar{x}\sim N(\mu,\dfrac{\sigma}{\sqrt{n}})$$

## Ejemplo {.medium}


Volviendo al ejemplo de nuestros estudiantes, la media es `r round(pop_df |> summarize(mean=mean(x, na.rm = T)),1)` y la desviación estándar es `r round(pop_df |> summarize(sd=sd(x, na.rm = T)),1)`. Entonces la distribución muestral de $\bar{x}_{30}$ es aproximadamente:

$$\bar{x}_{30}\sim N(9.9,\dfrac{3.6}{\sqrt{30}})$$

```{r}
#| echo: false
#| out-width: 100%
n_samples <- 10000 # Number of samples to draw
n_s <- 30
sample_means <- replicate(n_samples, {
  sample_indices <- sample(1:n_p, n_s, replace = FALSE) # Random sample
  mean(pop_df$x[sample_indices]) # Calculate mean
})
```

```{r}
#| echo: true
#| out-width: 100%
sum(sample_means > 10)

sum(sample_means > 9.9)

```
