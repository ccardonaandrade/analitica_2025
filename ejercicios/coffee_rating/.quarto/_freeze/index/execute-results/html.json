{
  "hash": "f313aba93b634643551950b7dd19bec6",
  "result": {
    "markdown": "---\ntitle: \"An√°lisis de Datos de Spotify\"\n\nlang: es\n\nformat: \n  closeread-html:\n   css: msaz.css\n   code-tools: false\n   fig-format: svg\n   toc: true\n   linkcolor: tomato\n---\n\n\nüìÖ **Fecha L√≠mite:** Martes 18 de febrero, 6:00 p.m.\n\n**Formato de Entrega:** Me env√≠an el R Script al correo con el formato usual `nombre_apellido.R`. Si realizan el trabajo en parejas, nombren el archivo `nombre1_apellido1_nombre2_apellido2.R`. *Antes de enviar el archivo, aseg√∫rense de que su c√≥digo se ejecuta correctamente en un nuevo R Script limpio*.\n\n\n**Criterios de evaluaci√≥n:**\n\n‚úî C√≥digo correcto y bien estructurado: si el c√≥digo no ejecuta, descuento la mitad del punto.\n\n‚úî Gr√°ficos generados correctamente: Uso de `ggplot2` con etiquetas claras y colores adecuados.\n\n‚úî Interpretaci√≥n y an√°lisis: Respuesta clara a las preguntas en comentarios y que sea concisa. Si su respuesta tiene m√°s de 3 l√≠neas es **muy** larga.\n\n‚úî Formato y organizaci√≥n: C√≥digo limpio, comentado y con t√≠tulos adecuados en el documento.\n\n\n## Descripci√≥n del Dataset de Spotify\n\nEl conjunto de datos contiene informaci√≥n sobre diversas canciones disponibles en Spotify, incluyendo caracter√≠sticas musicales, metadatos del artista y medidas de popularidad. A continuaci√≥n, se detallan las principales variables:\n\n1. **Metadatos de la canci√≥n**:\n\n`artist`: Nombre del artista o banda.\n\n`song`: Nombre de la canci√≥n.\n\n`year`: A√±o de lanzamiento.\n\n`genre`: G√©nero musical de la canci√≥n.\n\n\n2. **Popularidad y m√©tricas generales**:\n\n`popularity`: Medida de popularidad en una escala de 0 a 100, donde valores m√°s altos indican mayor popularidad.\n\n`explicit`: Indica si la canci√≥n tiene contenido expl√≠cito (TRUE o FALSE).\n\n`duration_ms`: Duraci√≥n de la canci√≥n en milisegundos.\n\n3. **Caracter√≠sticas musicales**:\n\n`danceability`: Medida de qu√© tan bailable es una canci√≥n (0 a 1).\n\n`energy`: Nivel de intensidad y actividad de la canci√≥n (0 a 1).\n\n`tempo`: Velocidad de la canci√≥n en beats por minuto (BPM).\n\n`key`: La tonalidad en la que est√° la canci√≥n, representada por un n√∫mero (0 = C, 1 = C‚ôØ/D‚ô≠, 2 = D, etc.).\n\n`mode`: Modalidad de la canci√≥n (1 = mayor, 0 = menor).\n\n`loudness`: Volumen promedio de la canci√≥n en decibeles (dB).\n\n4. **Otras caracter√≠sticas sonoras**:\n\n`speechiness`: Detecta la presencia de palabras habladas en una canci√≥n (0 a 1).\n\n`acousticness`: Indica qu√© tan ac√∫stica es una canci√≥n (0 a 1).\n\n`instrumentalness`: Mide la probabilidad de que una canci√≥n no tenga voces (0 a 1).\n\n`liveness`: Estima si una canci√≥n fue grabada en vivo (0 a 1).\n\n`valence`: Mide qu√© tan positiva o feliz es una canci√≥n (0 a 1).\n     \n## Ejercicio 1\n\nAbran un R Script, y utilizando la siguiente plantilla, carguen el paquete `tidyverse`. Inst√°lenlos desde la consola si es la primera vez que usan su PC actual.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## ------------------------------\n## An√°lisis de Spotify\n##\n## Autor(es): \n##\n## Fecha: \n## ------------------------------\n\n## establecemos el directorio de trabajo\n## En esta carpeta deber√≠an estar los datos\nsetwd(\"C:/Users/nombre_apellido/OneDrive/Documentos/analitica_spotify/data\")\n   \n## cargamos todos los paquetes que usaremos en la sesi√≥n:\n\nlibrary(tidyverse)\n\n## ---------------------------\n\n### Ejercicio 1\n\nspotify <- read.csv(\"spotify_data.csv\")\nglimpse(spotify)\n```\n:::\n\n\nCalculen la media, mediana, desviaci√≥n est√°ndar (sd) y rango intercuart√≠lico (IQR) de la variable `popularity`. Interpreten los resultados.\n\n\n## Ejercicio 2\n\nCreen un histograma de `popularity` con un n√∫mero de barras adecuado y colores personalizados. Agreguen una l√≠nea vertical que represente la media y la mediana (para esto usen la funci√≥n `geom_vline()`).¬øQu√© nos dice el gr√°fico?\n\n\n## Ejercicio 3\n\nCreen un diagrama de caja para la variable `popularity`. ¬øLa distribuci√≥n tiene valores at√≠picos? \n\n## Ejercicio 4\n\nCreen un diagrama de caja de la variable `popularity` agrupado por la variable `explicit`. Comparen la mediana de popularidad entre canciones expl√≠citas y no expl√≠citas. ¬øLas canciones expl√≠citas son generalmente m√°s o menos populares?\n\n## Ejercicio 5\n\nCreen un gr√°fico de dispersi√≥n con `danceability` en el eje x y `energy` en el eje y. El gr√°fico final debe tener una l√≠nea de tendencia suavizada (`geom_smooth()`) adem√°s de los puntos. Adicional a esto, calculen la correlaci√≥n entre ambas variables. ¬øLas canciones con mayor energ√≠a tienden a ser m√°s bailables?\n\n## Ejercicio 6\n\nBasados en la gr√°fica que resulta de ejecturar el siguiente c√≥digo y usando la funci√≥n `filter()`, seleccionen los datos para el a√±o que evidencie menor presencia de datos at√≠picos (*outliers*) en su opini√≥n. A esta nueva base de datos ll√°menla `spotify_new`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(spotify) +\n  geom_histogram(aes(x=popularity)) +\n  labs(x = \"Popularity Score\", y = \"Frequency\") +\n  facet_wrap(~ year) + \n  theme_minimal()\n```\n:::\n\n\n\n## Ejercicio 7\n\nUsando los datos `spotify_new`, calculen la media y la mediana de `popularity` dependiendo de si la canci√≥n es o no expl√≠cita (`explicit`). ¬øCambia su respuesta con respecto al Ejercicio 4?\n\n\n## Ejercicio 8\n\nUsando los datos `spotify_new`, creen un gr√°fico de dispersi√≥n con `popularity` en el eje x y elijan entre `loudness`, `speechiness` o `acousticness` para el eje y. ¬øQu√© relaci√≥n observan en el gr√°fico?¬øTiene sentido o va en contra de lo que ustedes habr√≠an esperado?\n\n## Ejercicio 9\n\nVolvamos a los datos originales `spotify` y creemos la variable `new_genre` de la siguiente manera:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspotify <- spotify |>\n  mutate(new_genre = case_when(\n    str_detect(genre, \"latin\") ~ \"Latin\",\n    str_detect(genre, \"rock\") ~ \"Rock\",\n    TRUE ~ \"Other\"\n  ))\n```\n:::\n\n\nEl n√∫mero total de casos para las tres categor√≠as que creamos con el c√≥digo anterior es:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspotify |> \n  group_by(new_genre) |> \n  count()\n```\n:::\n\n\nGrafiquen un diagrama de caja de la variable `danceability` para las tres categor√≠as de `new_genre`. ¬øTiene sentido el gr√°fico?¬øPor qu√©?\n\n## Ejercicio 10\n\nUsando la funci√≥n `mutate()`:\n\n1. Conviertan la duraci√≥n de las canciones (`duration_ms`) de milisegundos a minutos y gu√°rdenla en una nueva variable llamada `duration_min`.\n\n2. Creen una variable categ√≥rica llamada `song_length` que clasifique las canciones en:\n\n  - \"Short\" si la duraci√≥n es menor a 2.5 minutos.\n  \n  - \"Medium\" si est√° entre 2.5 y 4 minutos.\n  \n  - \"Long\" si dura m√°s de 4 minutos.\n  \n3. Generen un gr√°fico de barras que muestre la cantidad de canciones en cada categor√≠a (`song_length`).\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}